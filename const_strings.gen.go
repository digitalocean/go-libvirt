// Code generated by "stringer -type=ConnectCloseReason,TypedParameterType,TypedParameterFlags,DomainCheckpointCreateFlags,DomainCheckpointXMLFlags,DomainCheckpointListFlags,DomainCheckpointDeleteFlags,DomainSnapshotCreateFlags,DomainSnapshotXMLFlags,DomainSnapshotListFlags,DomainSnapshotRevertFlags,DomainSnapshotDeleteFlags,DomainState,DomainNostateReason,DomainRunningReason,DomainBlockedReason,DomainPausedReason,DomainShutdownReason,DomainShutoffReason,DomainCrashedReason,DomainPMSuspendedReason,DomainPMSuspendedDiskReason,DomainControlState,DomainControlErrorReason,DomainModificationImpact,DomainCreateFlags,DomainMemoryStatTags,DomainCoreDumpFlags,DomainCoreDumpFormat,DomainMigrateFlags,DomainMigrateMaxSpeedFlags,ConnectGetDomainCapabilitiesFlags,DomainShutdownFlagValues,DomainRebootFlagValues,DomainDestroyFlagsValues,DomainSaveRestoreFlags,DomainMemoryModFlags,DomainNumatuneMemMode,DomainGetHostnameFlags,DomainMetadataType,DomainXMLFlags,DomainSaveImageXMLFlags,DomainBlockResizeFlags,DomainMemoryFlags,DomainDefineFlags,DomainUndefineFlagsValues,ConnectListAllDomainsFlags,VCPUState,VCPUHostCPUState,DomainVCPUFlags,DomainDeviceModifyFlags,DomainStatsTypes,ConnectGetAllDomainStatsFlags,DomainBlockJobType,DomainBlockJobAbortFlags,DomainBlockJobInfoFlags,DomainBlockJobSetSpeedFlags,DomainBlockPullFlags,DomainBlockRebaseFlags,DomainBlockCopyFlags,DomainBlockCommitFlags,DomainDiskErrorCode,KeycodeSet,DomainProcessSignal,DomainEventType,DomainEventDefinedDetailType,DomainEventUndefinedDetailType,DomainEventStartedDetailType,DomainEventSuspendedDetailType,DomainEventResumedDetailType,DomainEventStoppedDetailType,DomainEventShutdownDetailType,DomainEventPMSuspendedDetailType,DomainEventCrashedDetailType,DomainMemoryFailureRecipientType,DomainMemoryFailureActionType,DomainMemoryFailureFlags,DomainJobType,DomainGetJobStatsFlags,DomainAbortJobFlagsValues,DomainJobOperation,DomainEventWatchdogAction,DomainEventIOErrorAction,DomainEventGraphicsPhase,DomainEventGraphicsAddressType,ConnectDomainEventBlockJobStatus,ConnectDomainEventDiskChangeReason,DomainEventTrayChangeReason,ConnectDomainEventAgentLifecycleState,ConnectDomainEventAgentLifecycleReason,DomainEventID,DomainConsoleFlags,DomainChannelFlags,DomainOpenGraphicsFlags,DomainSetTimeFlags,SchedParameterType,BlkioParameterType,MemoryParameterType,DomainInterfaceAddressesSource,DomainSetUserPasswordFlags,DomainLifecycle,DomainLifecycleAction,DomainGuestInfoTypes,DomainAgentResponseTimeoutValues,DomainBackupBeginFlags,DomainAuthorizedSSHKeysSetFlags,DomainMessageType,DomainDirtyRateStatus,DomainDirtyRateCalcFlags,DomainFDAssociateFlags,DomainGraphicsReloadType,EventHandleType,NodeSuspendTarget,NodeGetCPUStatsAllCPUs,NodeGetMemoryStatsAllCells,ConnectFlags,ConnectCredentialType,CPUCompareResult,ConnectCompareCPUFlags,ConnectBaselineCPUFlags,NodeAllocPagesFlags,ConnectListAllInterfacesFlags,InterfaceXMLFlags,InterfaceDefineFlags,NetworkXMLFlags,ConnectListAllNetworksFlags,NetworkCreateFlags,NetworkDefineFlags,NetworkUpdateCommand,NetworkUpdateSection,NetworkUpdateFlags,NetworkEventLifecycleType,NetworkEventID,IPAddrType,NetworkPortCreateFlags,NetworkMetadataType,ConnectListAllNodeDeviceFlags,NodeDeviceXMLFlags,NodeDeviceCreateXMLFlags,NodeDeviceDefineXMLFlags,NodeDeviceUpdateFlags,NodeDeviceEventID,NodeDeviceEventLifecycleType,NWFilterDefineFlags,NWFilterBindingCreateFlags,SecretUsageType,ConnectListAllSecretsFlags,SecretDefineFlags,SecretEventID,SecretEventLifecycleType,StoragePoolState,StoragePoolBuildFlags,StoragePoolDeleteFlags,StoragePoolCreateFlags,StorageVolType,StorageVolDeleteFlags,StorageVolWipeAlgorithm,StorageVolInfoFlags,StorageXMLFlags,ConnectListAllStoragePoolsFlags,StoragePoolDefineFlags,StorageVolCreateFlags,StorageVolDownloadFlags,StorageVolUploadFlags,StorageVolResizeFlags,StoragePoolEventID,StoragePoolEventLifecycleType,StreamFlags,StreamRecvFlagsValues,StreamEventType,ErrorLevel,ErrorDomain,ErrorNumber -output libvirt/const_strings.go"; DO NOT EDIT.

package libvirt

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[ConnectCloseReasonError-0]
	_ = x[ConnectCloseReasonEOF-1]
	_ = x[ConnectCloseReasonKeepalive-2]
	_ = x[ConnectCloseReasonClient-3]
}

const _ConnectCloseReason_name = "ConnectCloseReasonErrorConnectCloseReasonEOFConnectCloseReasonKeepaliveConnectCloseReasonClient"

var _ConnectCloseReason_index = [...]uint8{0, 23, 44, 71, 95}

func (i ConnectCloseReason) String() string {
	if i < 0 || i >= ConnectCloseReason(len(_ConnectCloseReason_index)-1) {
		return "ConnectCloseReason(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _ConnectCloseReason_name[_ConnectCloseReason_index[i]:_ConnectCloseReason_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[TypedParamInt-1]
	_ = x[TypedParamUint-2]
	_ = x[TypedParamLlong-3]
	_ = x[TypedParamUllong-4]
	_ = x[TypedParamDouble-5]
	_ = x[TypedParamBoolean-6]
	_ = x[TypedParamString-7]
}

const _TypedParameterType_name = "TypedParamIntTypedParamUintTypedParamLlongTypedParamUllongTypedParamDoubleTypedParamBooleanTypedParamString"

var _TypedParameterType_index = [...]uint8{0, 13, 27, 42, 58, 74, 91, 107}

func (i TypedParameterType) String() string {
	i -= 1
	if i < 0 || i >= TypedParameterType(len(_TypedParameterType_index)-1) {
		return "TypedParameterType(" + strconv.FormatInt(int64(i+1), 10) + ")"
	}
	return _TypedParameterType_name[_TypedParameterType_index[i]:_TypedParameterType_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[TypedParamStringOkay-4]
}

const _TypedParameterFlags_name = "TypedParamStringOkay"

var _TypedParameterFlags_index = [...]uint8{0, 20}

func (i TypedParameterFlags) String() string {
	i -= 4
	if i < 0 || i >= TypedParameterFlags(len(_TypedParameterFlags_index)-1) {
		return "TypedParameterFlags(" + strconv.FormatInt(int64(i+4), 10) + ")"
	}
	return _TypedParameterFlags_name[_TypedParameterFlags_index[i]:_TypedParameterFlags_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[DomainCheckpointCreateRedefine-1]
	_ = x[DomainCheckpointCreateQuiesce-2]
	_ = x[DomainCheckpointCreateRedefineValidate-4]
}

const (
	_DomainCheckpointCreateFlags_name_0 = "DomainCheckpointCreateRedefineDomainCheckpointCreateQuiesce"
	_DomainCheckpointCreateFlags_name_1 = "DomainCheckpointCreateRedefineValidate"
)

var (
	_DomainCheckpointCreateFlags_index_0 = [...]uint8{0, 30, 59}
)

func (i DomainCheckpointCreateFlags) String() string {
	switch {
	case 1 <= i && i <= 2:
		i -= 1
		return _DomainCheckpointCreateFlags_name_0[_DomainCheckpointCreateFlags_index_0[i]:_DomainCheckpointCreateFlags_index_0[i+1]]
	case i == 4:
		return _DomainCheckpointCreateFlags_name_1
	default:
		return "DomainCheckpointCreateFlags(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[DomainCheckpointXMLSecure-1]
	_ = x[DomainCheckpointXMLNoDomain-2]
	_ = x[DomainCheckpointXMLSize-4]
}

const (
	_DomainCheckpointXMLFlags_name_0 = "DomainCheckpointXMLSecureDomainCheckpointXMLNoDomain"
	_DomainCheckpointXMLFlags_name_1 = "DomainCheckpointXMLSize"
)

var (
	_DomainCheckpointXMLFlags_index_0 = [...]uint8{0, 25, 52}
)

func (i DomainCheckpointXMLFlags) String() string {
	switch {
	case 1 <= i && i <= 2:
		i -= 1
		return _DomainCheckpointXMLFlags_name_0[_DomainCheckpointXMLFlags_index_0[i]:_DomainCheckpointXMLFlags_index_0[i+1]]
	case i == 4:
		return _DomainCheckpointXMLFlags_name_1
	default:
		return "DomainCheckpointXMLFlags(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[DomainCheckpointListRoots-1]
	_ = x[DomainCheckpointListDescendants-1]
	_ = x[DomainCheckpointListTopological-2]
	_ = x[DomainCheckpointListLeaves-4]
	_ = x[DomainCheckpointListNoLeaves-8]
}

const (
	_DomainCheckpointListFlags_name_0 = "DomainCheckpointListRootsDomainCheckpointListTopological"
	_DomainCheckpointListFlags_name_1 = "DomainCheckpointListLeaves"
	_DomainCheckpointListFlags_name_2 = "DomainCheckpointListNoLeaves"
)

var (
	_DomainCheckpointListFlags_index_0 = [...]uint8{0, 25, 56}
)

func (i DomainCheckpointListFlags) String() string {
	switch {
	case 1 <= i && i <= 2:
		i -= 1
		return _DomainCheckpointListFlags_name_0[_DomainCheckpointListFlags_index_0[i]:_DomainCheckpointListFlags_index_0[i+1]]
	case i == 4:
		return _DomainCheckpointListFlags_name_1
	case i == 8:
		return _DomainCheckpointListFlags_name_2
	default:
		return "DomainCheckpointListFlags(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[DomainCheckpointDeleteChildren-1]
	_ = x[DomainCheckpointDeleteMetadataOnly-2]
	_ = x[DomainCheckpointDeleteChildrenOnly-4]
}

const (
	_DomainCheckpointDeleteFlags_name_0 = "DomainCheckpointDeleteChildrenDomainCheckpointDeleteMetadataOnly"
	_DomainCheckpointDeleteFlags_name_1 = "DomainCheckpointDeleteChildrenOnly"
)

var (
	_DomainCheckpointDeleteFlags_index_0 = [...]uint8{0, 30, 64}
)

func (i DomainCheckpointDeleteFlags) String() string {
	switch {
	case 1 <= i && i <= 2:
		i -= 1
		return _DomainCheckpointDeleteFlags_name_0[_DomainCheckpointDeleteFlags_index_0[i]:_DomainCheckpointDeleteFlags_index_0[i+1]]
	case i == 4:
		return _DomainCheckpointDeleteFlags_name_1
	default:
		return "DomainCheckpointDeleteFlags(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[DomainSnapshotCreateRedefine-1]
	_ = x[DomainSnapshotCreateCurrent-2]
	_ = x[DomainSnapshotCreateNoMetadata-4]
	_ = x[DomainSnapshotCreateHalt-8]
	_ = x[DomainSnapshotCreateDiskOnly-16]
	_ = x[DomainSnapshotCreateReuseExt-32]
	_ = x[DomainSnapshotCreateQuiesce-64]
	_ = x[DomainSnapshotCreateAtomic-128]
	_ = x[DomainSnapshotCreateLive-256]
	_ = x[DomainSnapshotCreateValidate-512]
}

const (
	_DomainSnapshotCreateFlags_name_0 = "DomainSnapshotCreateRedefineDomainSnapshotCreateCurrent"
	_DomainSnapshotCreateFlags_name_1 = "DomainSnapshotCreateNoMetadata"
	_DomainSnapshotCreateFlags_name_2 = "DomainSnapshotCreateHalt"
	_DomainSnapshotCreateFlags_name_3 = "DomainSnapshotCreateDiskOnly"
	_DomainSnapshotCreateFlags_name_4 = "DomainSnapshotCreateReuseExt"
	_DomainSnapshotCreateFlags_name_5 = "DomainSnapshotCreateQuiesce"
	_DomainSnapshotCreateFlags_name_6 = "DomainSnapshotCreateAtomic"
	_DomainSnapshotCreateFlags_name_7 = "DomainSnapshotCreateLive"
	_DomainSnapshotCreateFlags_name_8 = "DomainSnapshotCreateValidate"
)

var (
	_DomainSnapshotCreateFlags_index_0 = [...]uint8{0, 28, 55}
)

func (i DomainSnapshotCreateFlags) String() string {
	switch {
	case 1 <= i && i <= 2:
		i -= 1
		return _DomainSnapshotCreateFlags_name_0[_DomainSnapshotCreateFlags_index_0[i]:_DomainSnapshotCreateFlags_index_0[i+1]]
	case i == 4:
		return _DomainSnapshotCreateFlags_name_1
	case i == 8:
		return _DomainSnapshotCreateFlags_name_2
	case i == 16:
		return _DomainSnapshotCreateFlags_name_3
	case i == 32:
		return _DomainSnapshotCreateFlags_name_4
	case i == 64:
		return _DomainSnapshotCreateFlags_name_5
	case i == 128:
		return _DomainSnapshotCreateFlags_name_6
	case i == 256:
		return _DomainSnapshotCreateFlags_name_7
	case i == 512:
		return _DomainSnapshotCreateFlags_name_8
	default:
		return "DomainSnapshotCreateFlags(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[DomainSnapshotXMLSecure-1]
}

const _DomainSnapshotXMLFlags_name = "DomainSnapshotXMLSecure"

var _DomainSnapshotXMLFlags_index = [...]uint8{0, 23}

func (i DomainSnapshotXMLFlags) String() string {
	i -= 1
	if i < 0 || i >= DomainSnapshotXMLFlags(len(_DomainSnapshotXMLFlags_index)-1) {
		return "DomainSnapshotXMLFlags(" + strconv.FormatInt(int64(i+1), 10) + ")"
	}
	return _DomainSnapshotXMLFlags_name[_DomainSnapshotXMLFlags_index[i]:_DomainSnapshotXMLFlags_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[DomainSnapshotListRoots-1]
	_ = x[DomainSnapshotListDescendants-1]
	_ = x[DomainSnapshotListLeaves-4]
	_ = x[DomainSnapshotListNoLeaves-8]
	_ = x[DomainSnapshotListMetadata-2]
	_ = x[DomainSnapshotListNoMetadata-16]
	_ = x[DomainSnapshotListInactive-32]
	_ = x[DomainSnapshotListActive-64]
	_ = x[DomainSnapshotListDiskOnly-128]
	_ = x[DomainSnapshotListInternal-256]
	_ = x[DomainSnapshotListExternal-512]
	_ = x[DomainSnapshotListTopological-1024]
}

const (
	_DomainSnapshotListFlags_name_0 = "DomainSnapshotListRootsDomainSnapshotListMetadata"
	_DomainSnapshotListFlags_name_1 = "DomainSnapshotListLeaves"
	_DomainSnapshotListFlags_name_2 = "DomainSnapshotListNoLeaves"
	_DomainSnapshotListFlags_name_3 = "DomainSnapshotListNoMetadata"
	_DomainSnapshotListFlags_name_4 = "DomainSnapshotListInactive"
	_DomainSnapshotListFlags_name_5 = "DomainSnapshotListActive"
	_DomainSnapshotListFlags_name_6 = "DomainSnapshotListDiskOnly"
	_DomainSnapshotListFlags_name_7 = "DomainSnapshotListInternal"
	_DomainSnapshotListFlags_name_8 = "DomainSnapshotListExternal"
	_DomainSnapshotListFlags_name_9 = "DomainSnapshotListTopological"
)

var (
	_DomainSnapshotListFlags_index_0 = [...]uint8{0, 23, 49}
)

func (i DomainSnapshotListFlags) String() string {
	switch {
	case 1 <= i && i <= 2:
		i -= 1
		return _DomainSnapshotListFlags_name_0[_DomainSnapshotListFlags_index_0[i]:_DomainSnapshotListFlags_index_0[i+1]]
	case i == 4:
		return _DomainSnapshotListFlags_name_1
	case i == 8:
		return _DomainSnapshotListFlags_name_2
	case i == 16:
		return _DomainSnapshotListFlags_name_3
	case i == 32:
		return _DomainSnapshotListFlags_name_4
	case i == 64:
		return _DomainSnapshotListFlags_name_5
	case i == 128:
		return _DomainSnapshotListFlags_name_6
	case i == 256:
		return _DomainSnapshotListFlags_name_7
	case i == 512:
		return _DomainSnapshotListFlags_name_8
	case i == 1024:
		return _DomainSnapshotListFlags_name_9
	default:
		return "DomainSnapshotListFlags(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[DomainSnapshotRevertRunning-1]
	_ = x[DomainSnapshotRevertPaused-2]
	_ = x[DomainSnapshotRevertForce-4]
	_ = x[DomainSnapshotRevertResetNvram-8]
}

const (
	_DomainSnapshotRevertFlags_name_0 = "DomainSnapshotRevertRunningDomainSnapshotRevertPaused"
	_DomainSnapshotRevertFlags_name_1 = "DomainSnapshotRevertForce"
	_DomainSnapshotRevertFlags_name_2 = "DomainSnapshotRevertResetNvram"
)

var (
	_DomainSnapshotRevertFlags_index_0 = [...]uint8{0, 27, 53}
)

func (i DomainSnapshotRevertFlags) String() string {
	switch {
	case 1 <= i && i <= 2:
		i -= 1
		return _DomainSnapshotRevertFlags_name_0[_DomainSnapshotRevertFlags_index_0[i]:_DomainSnapshotRevertFlags_index_0[i+1]]
	case i == 4:
		return _DomainSnapshotRevertFlags_name_1
	case i == 8:
		return _DomainSnapshotRevertFlags_name_2
	default:
		return "DomainSnapshotRevertFlags(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[DomainSnapshotDeleteChildren-1]
	_ = x[DomainSnapshotDeleteMetadataOnly-2]
	_ = x[DomainSnapshotDeleteChildrenOnly-4]
}

const (
	_DomainSnapshotDeleteFlags_name_0 = "DomainSnapshotDeleteChildrenDomainSnapshotDeleteMetadataOnly"
	_DomainSnapshotDeleteFlags_name_1 = "DomainSnapshotDeleteChildrenOnly"
)

var (
	_DomainSnapshotDeleteFlags_index_0 = [...]uint8{0, 28, 60}
)

func (i DomainSnapshotDeleteFlags) String() string {
	switch {
	case 1 <= i && i <= 2:
		i -= 1
		return _DomainSnapshotDeleteFlags_name_0[_DomainSnapshotDeleteFlags_index_0[i]:_DomainSnapshotDeleteFlags_index_0[i+1]]
	case i == 4:
		return _DomainSnapshotDeleteFlags_name_1
	default:
		return "DomainSnapshotDeleteFlags(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[DomainNostate-0]
	_ = x[DomainRunning-1]
	_ = x[DomainBlocked-2]
	_ = x[DomainPaused-3]
	_ = x[DomainShutdown-4]
	_ = x[DomainShutoff-5]
	_ = x[DomainCrashed-6]
	_ = x[DomainPmsuspended-7]
}

const _DomainState_name = "DomainNostateDomainRunningDomainBlockedDomainPausedDomainShutdownDomainShutoffDomainCrashedDomainPmsuspended"

var _DomainState_index = [...]uint8{0, 13, 26, 39, 51, 65, 78, 91, 108}

func (i DomainState) String() string {
	if i < 0 || i >= DomainState(len(_DomainState_index)-1) {
		return "DomainState(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _DomainState_name[_DomainState_index[i]:_DomainState_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[DomainNostateUnknown-0]
}

const _DomainNostateReason_name = "DomainNostateUnknown"

var _DomainNostateReason_index = [...]uint8{0, 20}

func (i DomainNostateReason) String() string {
	if i < 0 || i >= DomainNostateReason(len(_DomainNostateReason_index)-1) {
		return "DomainNostateReason(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _DomainNostateReason_name[_DomainNostateReason_index[i]:_DomainNostateReason_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[DomainRunningUnknown-0]
	_ = x[DomainRunningBooted-1]
	_ = x[DomainRunningMigrated-2]
	_ = x[DomainRunningRestored-3]
	_ = x[DomainRunningFromSnapshot-4]
	_ = x[DomainRunningUnpaused-5]
	_ = x[DomainRunningMigrationCanceled-6]
	_ = x[DomainRunningSaveCanceled-7]
	_ = x[DomainRunningWakeup-8]
	_ = x[DomainRunningCrashed-9]
	_ = x[DomainRunningPostcopy-10]
	_ = x[DomainRunningPostcopyFailed-11]
}

const _DomainRunningReason_name = "DomainRunningUnknownDomainRunningBootedDomainRunningMigratedDomainRunningRestoredDomainRunningFromSnapshotDomainRunningUnpausedDomainRunningMigrationCanceledDomainRunningSaveCanceledDomainRunningWakeupDomainRunningCrashedDomainRunningPostcopyDomainRunningPostcopyFailed"

var _DomainRunningReason_index = [...]uint16{0, 20, 39, 60, 81, 106, 127, 157, 182, 201, 221, 242, 269}

func (i DomainRunningReason) String() string {
	if i < 0 || i >= DomainRunningReason(len(_DomainRunningReason_index)-1) {
		return "DomainRunningReason(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _DomainRunningReason_name[_DomainRunningReason_index[i]:_DomainRunningReason_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[DomainBlockedUnknown-0]
}

const _DomainBlockedReason_name = "DomainBlockedUnknown"

var _DomainBlockedReason_index = [...]uint8{0, 20}

func (i DomainBlockedReason) String() string {
	if i < 0 || i >= DomainBlockedReason(len(_DomainBlockedReason_index)-1) {
		return "DomainBlockedReason(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _DomainBlockedReason_name[_DomainBlockedReason_index[i]:_DomainBlockedReason_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[DomainPausedUnknown-0]
	_ = x[DomainPausedUser-1]
	_ = x[DomainPausedMigration-2]
	_ = x[DomainPausedSave-3]
	_ = x[DomainPausedDump-4]
	_ = x[DomainPausedIoerror-5]
	_ = x[DomainPausedWatchdog-6]
	_ = x[DomainPausedFromSnapshot-7]
	_ = x[DomainPausedShuttingDown-8]
	_ = x[DomainPausedSnapshot-9]
	_ = x[DomainPausedCrashed-10]
	_ = x[DomainPausedStartingUp-11]
	_ = x[DomainPausedPostcopy-12]
	_ = x[DomainPausedPostcopyFailed-13]
	_ = x[DomainPausedAPIError-14]
}

const _DomainPausedReason_name = "DomainPausedUnknownDomainPausedUserDomainPausedMigrationDomainPausedSaveDomainPausedDumpDomainPausedIoerrorDomainPausedWatchdogDomainPausedFromSnapshotDomainPausedShuttingDownDomainPausedSnapshotDomainPausedCrashedDomainPausedStartingUpDomainPausedPostcopyDomainPausedPostcopyFailedDomainPausedAPIError"

var _DomainPausedReason_index = [...]uint16{0, 19, 35, 56, 72, 88, 107, 127, 151, 175, 195, 214, 236, 256, 282, 302}

func (i DomainPausedReason) String() string {
	if i < 0 || i >= DomainPausedReason(len(_DomainPausedReason_index)-1) {
		return "DomainPausedReason(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _DomainPausedReason_name[_DomainPausedReason_index[i]:_DomainPausedReason_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[DomainShutdownUnknown-0]
	_ = x[DomainShutdownUser-1]
}

const _DomainShutdownReason_name = "DomainShutdownUnknownDomainShutdownUser"

var _DomainShutdownReason_index = [...]uint8{0, 21, 39}

func (i DomainShutdownReason) String() string {
	if i < 0 || i >= DomainShutdownReason(len(_DomainShutdownReason_index)-1) {
		return "DomainShutdownReason(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _DomainShutdownReason_name[_DomainShutdownReason_index[i]:_DomainShutdownReason_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[DomainShutoffUnknown-0]
	_ = x[DomainShutoffShutdown-1]
	_ = x[DomainShutoffDestroyed-2]
	_ = x[DomainShutoffCrashed-3]
	_ = x[DomainShutoffMigrated-4]
	_ = x[DomainShutoffSaved-5]
	_ = x[DomainShutoffFailed-6]
	_ = x[DomainShutoffFromSnapshot-7]
	_ = x[DomainShutoffDaemon-8]
}

const _DomainShutoffReason_name = "DomainShutoffUnknownDomainShutoffShutdownDomainShutoffDestroyedDomainShutoffCrashedDomainShutoffMigratedDomainShutoffSavedDomainShutoffFailedDomainShutoffFromSnapshotDomainShutoffDaemon"

var _DomainShutoffReason_index = [...]uint8{0, 20, 41, 63, 83, 104, 122, 141, 166, 185}

func (i DomainShutoffReason) String() string {
	if i < 0 || i >= DomainShutoffReason(len(_DomainShutoffReason_index)-1) {
		return "DomainShutoffReason(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _DomainShutoffReason_name[_DomainShutoffReason_index[i]:_DomainShutoffReason_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[DomainCrashedUnknown-0]
	_ = x[DomainCrashedPanicked-1]
}

const _DomainCrashedReason_name = "DomainCrashedUnknownDomainCrashedPanicked"

var _DomainCrashedReason_index = [...]uint8{0, 20, 41}

func (i DomainCrashedReason) String() string {
	if i < 0 || i >= DomainCrashedReason(len(_DomainCrashedReason_index)-1) {
		return "DomainCrashedReason(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _DomainCrashedReason_name[_DomainCrashedReason_index[i]:_DomainCrashedReason_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[DomainPmsuspendedUnknown-0]
}

const _DomainPMSuspendedReason_name = "DomainPmsuspendedUnknown"

var _DomainPMSuspendedReason_index = [...]uint8{0, 24}

func (i DomainPMSuspendedReason) String() string {
	if i < 0 || i >= DomainPMSuspendedReason(len(_DomainPMSuspendedReason_index)-1) {
		return "DomainPMSuspendedReason(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _DomainPMSuspendedReason_name[_DomainPMSuspendedReason_index[i]:_DomainPMSuspendedReason_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[DomainPmsuspendedDiskUnknown-0]
}

const _DomainPMSuspendedDiskReason_name = "DomainPmsuspendedDiskUnknown"

var _DomainPMSuspendedDiskReason_index = [...]uint8{0, 28}

func (i DomainPMSuspendedDiskReason) String() string {
	if i < 0 || i >= DomainPMSuspendedDiskReason(len(_DomainPMSuspendedDiskReason_index)-1) {
		return "DomainPMSuspendedDiskReason(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _DomainPMSuspendedDiskReason_name[_DomainPMSuspendedDiskReason_index[i]:_DomainPMSuspendedDiskReason_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[DomainControlOk-0]
	_ = x[DomainControlJob-1]
	_ = x[DomainControlOccupied-2]
	_ = x[DomainControlError-3]
}

const _DomainControlState_name = "DomainControlOkDomainControlJobDomainControlOccupiedDomainControlError"

var _DomainControlState_index = [...]uint8{0, 15, 31, 52, 70}

func (i DomainControlState) String() string {
	if i < 0 || i >= DomainControlState(len(_DomainControlState_index)-1) {
		return "DomainControlState(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _DomainControlState_name[_DomainControlState_index[i]:_DomainControlState_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[DomainControlErrorReasonNone-0]
	_ = x[DomainControlErrorReasonUnknown-1]
	_ = x[DomainControlErrorReasonMonitor-2]
	_ = x[DomainControlErrorReasonInternal-3]
}

const _DomainControlErrorReason_name = "DomainControlErrorReasonNoneDomainControlErrorReasonUnknownDomainControlErrorReasonMonitorDomainControlErrorReasonInternal"

var _DomainControlErrorReason_index = [...]uint8{0, 28, 59, 90, 122}

func (i DomainControlErrorReason) String() string {
	if i < 0 || i >= DomainControlErrorReason(len(_DomainControlErrorReason_index)-1) {
		return "DomainControlErrorReason(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _DomainControlErrorReason_name[_DomainControlErrorReason_index[i]:_DomainControlErrorReason_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[DomainAffectCurrent-0]
	_ = x[DomainAffectLive-1]
	_ = x[DomainAffectConfig-2]
}

const _DomainModificationImpact_name = "DomainAffectCurrentDomainAffectLiveDomainAffectConfig"

var _DomainModificationImpact_index = [...]uint8{0, 19, 35, 53}

func (i DomainModificationImpact) String() string {
	if i < 0 || i >= DomainModificationImpact(len(_DomainModificationImpact_index)-1) {
		return "DomainModificationImpact(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _DomainModificationImpact_name[_DomainModificationImpact_index[i]:_DomainModificationImpact_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[DomainNone-0]
	_ = x[DomainStartPaused-1]
	_ = x[DomainStartAutodestroy-2]
	_ = x[DomainStartBypassCache-4]
	_ = x[DomainStartForceBoot-8]
	_ = x[DomainStartValidate-16]
	_ = x[DomainStartResetNvram-32]
}

const (
	_DomainCreateFlags_name_0 = "DomainNoneDomainStartPausedDomainStartAutodestroy"
	_DomainCreateFlags_name_1 = "DomainStartBypassCache"
	_DomainCreateFlags_name_2 = "DomainStartForceBoot"
	_DomainCreateFlags_name_3 = "DomainStartValidate"
	_DomainCreateFlags_name_4 = "DomainStartResetNvram"
)

var (
	_DomainCreateFlags_index_0 = [...]uint8{0, 10, 27, 49}
)

func (i DomainCreateFlags) String() string {
	switch {
	case 0 <= i && i <= 2:
		return _DomainCreateFlags_name_0[_DomainCreateFlags_index_0[i]:_DomainCreateFlags_index_0[i+1]]
	case i == 4:
		return _DomainCreateFlags_name_1
	case i == 8:
		return _DomainCreateFlags_name_2
	case i == 16:
		return _DomainCreateFlags_name_3
	case i == 32:
		return _DomainCreateFlags_name_4
	default:
		return "DomainCreateFlags(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[DomainMemoryStatSwapIn-0]
	_ = x[DomainMemoryStatSwapOut-1]
	_ = x[DomainMemoryStatMajorFault-2]
	_ = x[DomainMemoryStatMinorFault-3]
	_ = x[DomainMemoryStatUnused-4]
	_ = x[DomainMemoryStatAvailable-5]
	_ = x[DomainMemoryStatActualBalloon-6]
	_ = x[DomainMemoryStatRss-7]
	_ = x[DomainMemoryStatUsable-8]
	_ = x[DomainMemoryStatLastUpdate-9]
	_ = x[DomainMemoryStatDiskCaches-10]
	_ = x[DomainMemoryStatHugetlbPgalloc-11]
	_ = x[DomainMemoryStatHugetlbPgfail-12]
	_ = x[DomainMemoryStatNr-13]
}

const _DomainMemoryStatTags_name = "DomainMemoryStatSwapInDomainMemoryStatSwapOutDomainMemoryStatMajorFaultDomainMemoryStatMinorFaultDomainMemoryStatUnusedDomainMemoryStatAvailableDomainMemoryStatActualBalloonDomainMemoryStatRssDomainMemoryStatUsableDomainMemoryStatLastUpdateDomainMemoryStatDiskCachesDomainMemoryStatHugetlbPgallocDomainMemoryStatHugetlbPgfailDomainMemoryStatNr"

var _DomainMemoryStatTags_index = [...]uint16{0, 22, 45, 71, 97, 119, 144, 173, 192, 214, 240, 266, 296, 325, 343}

func (i DomainMemoryStatTags) String() string {
	if i < 0 || i >= DomainMemoryStatTags(len(_DomainMemoryStatTags_index)-1) {
		return "DomainMemoryStatTags(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _DomainMemoryStatTags_name[_DomainMemoryStatTags_index[i]:_DomainMemoryStatTags_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[DumpCrash-1]
	_ = x[DumpLive-2]
	_ = x[DumpBypassCache-4]
	_ = x[DumpReset-8]
	_ = x[DumpMemoryOnly-16]
}

const (
	_DomainCoreDumpFlags_name_0 = "DumpCrashDumpLive"
	_DomainCoreDumpFlags_name_1 = "DumpBypassCache"
	_DomainCoreDumpFlags_name_2 = "DumpReset"
	_DomainCoreDumpFlags_name_3 = "DumpMemoryOnly"
)

var (
	_DomainCoreDumpFlags_index_0 = [...]uint8{0, 9, 17}
)

func (i DomainCoreDumpFlags) String() string {
	switch {
	case 1 <= i && i <= 2:
		i -= 1
		return _DomainCoreDumpFlags_name_0[_DomainCoreDumpFlags_index_0[i]:_DomainCoreDumpFlags_index_0[i+1]]
	case i == 4:
		return _DomainCoreDumpFlags_name_1
	case i == 8:
		return _DomainCoreDumpFlags_name_2
	case i == 16:
		return _DomainCoreDumpFlags_name_3
	default:
		return "DomainCoreDumpFlags(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[DomainCoreDumpFormatRaw-0]
	_ = x[DomainCoreDumpFormatKdumpZlib-1]
	_ = x[DomainCoreDumpFormatKdumpLzo-2]
	_ = x[DomainCoreDumpFormatKdumpSnappy-3]
	_ = x[DomainCoreDumpFormatWinDmp-4]
}

const _DomainCoreDumpFormat_name = "DomainCoreDumpFormatRawDomainCoreDumpFormatKdumpZlibDomainCoreDumpFormatKdumpLzoDomainCoreDumpFormatKdumpSnappyDomainCoreDumpFormatWinDmp"

var _DomainCoreDumpFormat_index = [...]uint8{0, 23, 52, 80, 111, 137}

func (i DomainCoreDumpFormat) String() string {
	if i < 0 || i >= DomainCoreDumpFormat(len(_DomainCoreDumpFormat_index)-1) {
		return "DomainCoreDumpFormat(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _DomainCoreDumpFormat_name[_DomainCoreDumpFormat_index[i]:_DomainCoreDumpFormat_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[MigrateLive-1]
	_ = x[MigratePeer2peer-2]
	_ = x[MigrateTunnelled-4]
	_ = x[MigratePersistDest-8]
	_ = x[MigrateUndefineSource-16]
	_ = x[MigratePaused-32]
	_ = x[MigrateNonSharedDisk-64]
	_ = x[MigrateNonSharedInc-128]
	_ = x[MigrateChangeProtection-256]
	_ = x[MigrateUnsafe-512]
	_ = x[MigrateOffline-1024]
	_ = x[MigrateCompressed-2048]
	_ = x[MigrateAbortOnError-4096]
	_ = x[MigrateAutoConverge-8192]
	_ = x[MigrateRdmaPinAll-16384]
	_ = x[MigratePostcopy-32768]
	_ = x[MigrateTLS-65536]
	_ = x[MigrateParallel-131072]
	_ = x[MigrateNonSharedSynchronousWrites-262144]
	_ = x[MigratePostcopyResume-524288]
	_ = x[MigrateZerocopy-1048576]
}

const _DomainMigrateFlags_name = "MigrateLiveMigratePeer2peerMigrateTunnelledMigratePersistDestMigrateUndefineSourceMigratePausedMigrateNonSharedDiskMigrateNonSharedIncMigrateChangeProtectionMigrateUnsafeMigrateOfflineMigrateCompressedMigrateAbortOnErrorMigrateAutoConvergeMigrateRdmaPinAllMigratePostcopyMigrateTLSMigrateParallelMigrateNonSharedSynchronousWritesMigratePostcopyResumeMigrateZerocopy"

var _DomainMigrateFlags_map = map[DomainMigrateFlags]string{
	1:       _DomainMigrateFlags_name[0:11],
	2:       _DomainMigrateFlags_name[11:27],
	4:       _DomainMigrateFlags_name[27:43],
	8:       _DomainMigrateFlags_name[43:61],
	16:      _DomainMigrateFlags_name[61:82],
	32:      _DomainMigrateFlags_name[82:95],
	64:      _DomainMigrateFlags_name[95:115],
	128:     _DomainMigrateFlags_name[115:134],
	256:     _DomainMigrateFlags_name[134:157],
	512:     _DomainMigrateFlags_name[157:170],
	1024:    _DomainMigrateFlags_name[170:184],
	2048:    _DomainMigrateFlags_name[184:201],
	4096:    _DomainMigrateFlags_name[201:220],
	8192:    _DomainMigrateFlags_name[220:239],
	16384:   _DomainMigrateFlags_name[239:256],
	32768:   _DomainMigrateFlags_name[256:271],
	65536:   _DomainMigrateFlags_name[271:281],
	131072:  _DomainMigrateFlags_name[281:296],
	262144:  _DomainMigrateFlags_name[296:329],
	524288:  _DomainMigrateFlags_name[329:350],
	1048576: _DomainMigrateFlags_name[350:365],
}

func (i DomainMigrateFlags) String() string {
	if str, ok := _DomainMigrateFlags_map[i]; ok {
		return str
	}
	return "DomainMigrateFlags(" + strconv.FormatInt(int64(i), 10) + ")"
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[DomainMigrateMaxSpeedPostcopy-1]
}

const _DomainMigrateMaxSpeedFlags_name = "DomainMigrateMaxSpeedPostcopy"

var _DomainMigrateMaxSpeedFlags_index = [...]uint8{0, 29}

func (i DomainMigrateMaxSpeedFlags) String() string {
	i -= 1
	if i < 0 || i >= DomainMigrateMaxSpeedFlags(len(_DomainMigrateMaxSpeedFlags_index)-1) {
		return "DomainMigrateMaxSpeedFlags(" + strconv.FormatInt(int64(i+1), 10) + ")"
	}
	return _DomainMigrateMaxSpeedFlags_name[_DomainMigrateMaxSpeedFlags_index[i]:_DomainMigrateMaxSpeedFlags_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[ConnectGetDomainCapabilitiesDisableDeprecatedFeatures-1]
}

const _ConnectGetDomainCapabilitiesFlags_name = "ConnectGetDomainCapabilitiesDisableDeprecatedFeatures"

var _ConnectGetDomainCapabilitiesFlags_index = [...]uint8{0, 53}

func (i ConnectGetDomainCapabilitiesFlags) String() string {
	i -= 1
	if i < 0 || i >= ConnectGetDomainCapabilitiesFlags(len(_ConnectGetDomainCapabilitiesFlags_index)-1) {
		return "ConnectGetDomainCapabilitiesFlags(" + strconv.FormatInt(int64(i+1), 10) + ")"
	}
	return _ConnectGetDomainCapabilitiesFlags_name[_ConnectGetDomainCapabilitiesFlags_index[i]:_ConnectGetDomainCapabilitiesFlags_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[DomainShutdownDefault-0]
	_ = x[DomainShutdownAcpiPowerBtn-1]
	_ = x[DomainShutdownGuestAgent-2]
	_ = x[DomainShutdownInitctl-4]
	_ = x[DomainShutdownSignal-8]
	_ = x[DomainShutdownParavirt-16]
}

const (
	_DomainShutdownFlagValues_name_0 = "DomainShutdownDefaultDomainShutdownAcpiPowerBtnDomainShutdownGuestAgent"
	_DomainShutdownFlagValues_name_1 = "DomainShutdownInitctl"
	_DomainShutdownFlagValues_name_2 = "DomainShutdownSignal"
	_DomainShutdownFlagValues_name_3 = "DomainShutdownParavirt"
)

var (
	_DomainShutdownFlagValues_index_0 = [...]uint8{0, 21, 47, 71}
)

func (i DomainShutdownFlagValues) String() string {
	switch {
	case 0 <= i && i <= 2:
		return _DomainShutdownFlagValues_name_0[_DomainShutdownFlagValues_index_0[i]:_DomainShutdownFlagValues_index_0[i+1]]
	case i == 4:
		return _DomainShutdownFlagValues_name_1
	case i == 8:
		return _DomainShutdownFlagValues_name_2
	case i == 16:
		return _DomainShutdownFlagValues_name_3
	default:
		return "DomainShutdownFlagValues(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[DomainRebootDefault-0]
	_ = x[DomainRebootAcpiPowerBtn-1]
	_ = x[DomainRebootGuestAgent-2]
	_ = x[DomainRebootInitctl-4]
	_ = x[DomainRebootSignal-8]
	_ = x[DomainRebootParavirt-16]
}

const (
	_DomainRebootFlagValues_name_0 = "DomainRebootDefaultDomainRebootAcpiPowerBtnDomainRebootGuestAgent"
	_DomainRebootFlagValues_name_1 = "DomainRebootInitctl"
	_DomainRebootFlagValues_name_2 = "DomainRebootSignal"
	_DomainRebootFlagValues_name_3 = "DomainRebootParavirt"
)

var (
	_DomainRebootFlagValues_index_0 = [...]uint8{0, 19, 43, 65}
)

func (i DomainRebootFlagValues) String() string {
	switch {
	case 0 <= i && i <= 2:
		return _DomainRebootFlagValues_name_0[_DomainRebootFlagValues_index_0[i]:_DomainRebootFlagValues_index_0[i+1]]
	case i == 4:
		return _DomainRebootFlagValues_name_1
	case i == 8:
		return _DomainRebootFlagValues_name_2
	case i == 16:
		return _DomainRebootFlagValues_name_3
	default:
		return "DomainRebootFlagValues(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[DomainDestroyDefault-0]
	_ = x[DomainDestroyGraceful-1]
	_ = x[DomainDestroyRemoveLogs-2]
}

const _DomainDestroyFlagsValues_name = "DomainDestroyDefaultDomainDestroyGracefulDomainDestroyRemoveLogs"

var _DomainDestroyFlagsValues_index = [...]uint8{0, 20, 41, 64}

func (i DomainDestroyFlagsValues) String() string {
	if i < 0 || i >= DomainDestroyFlagsValues(len(_DomainDestroyFlagsValues_index)-1) {
		return "DomainDestroyFlagsValues(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _DomainDestroyFlagsValues_name[_DomainDestroyFlagsValues_index[i]:_DomainDestroyFlagsValues_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[DomainSaveBypassCache-1]
	_ = x[DomainSaveRunning-2]
	_ = x[DomainSavePaused-4]
	_ = x[DomainSaveResetNvram-8]
}

const (
	_DomainSaveRestoreFlags_name_0 = "DomainSaveBypassCacheDomainSaveRunning"
	_DomainSaveRestoreFlags_name_1 = "DomainSavePaused"
	_DomainSaveRestoreFlags_name_2 = "DomainSaveResetNvram"
)

var (
	_DomainSaveRestoreFlags_index_0 = [...]uint8{0, 21, 38}
)

func (i DomainSaveRestoreFlags) String() string {
	switch {
	case 1 <= i && i <= 2:
		i -= 1
		return _DomainSaveRestoreFlags_name_0[_DomainSaveRestoreFlags_index_0[i]:_DomainSaveRestoreFlags_index_0[i+1]]
	case i == 4:
		return _DomainSaveRestoreFlags_name_1
	case i == 8:
		return _DomainSaveRestoreFlags_name_2
	default:
		return "DomainSaveRestoreFlags(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[DomainMemCurrent-0]
	_ = x[DomainMemLive-1]
	_ = x[DomainMemConfig-2]
	_ = x[DomainMemMaximum-4]
}

const (
	_DomainMemoryModFlags_name_0 = "DomainMemCurrentDomainMemLiveDomainMemConfig"
	_DomainMemoryModFlags_name_1 = "DomainMemMaximum"
)

var (
	_DomainMemoryModFlags_index_0 = [...]uint8{0, 16, 29, 44}
)

func (i DomainMemoryModFlags) String() string {
	switch {
	case 0 <= i && i <= 2:
		return _DomainMemoryModFlags_name_0[_DomainMemoryModFlags_index_0[i]:_DomainMemoryModFlags_index_0[i+1]]
	case i == 4:
		return _DomainMemoryModFlags_name_1
	default:
		return "DomainMemoryModFlags(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[DomainNumatuneMemStrict-0]
	_ = x[DomainNumatuneMemPreferred-1]
	_ = x[DomainNumatuneMemInterleave-2]
	_ = x[DomainNumatuneMemRestrictive-3]
}

const _DomainNumatuneMemMode_name = "DomainNumatuneMemStrictDomainNumatuneMemPreferredDomainNumatuneMemInterleaveDomainNumatuneMemRestrictive"

var _DomainNumatuneMemMode_index = [...]uint8{0, 23, 49, 76, 104}

func (i DomainNumatuneMemMode) String() string {
	if i < 0 || i >= DomainNumatuneMemMode(len(_DomainNumatuneMemMode_index)-1) {
		return "DomainNumatuneMemMode(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _DomainNumatuneMemMode_name[_DomainNumatuneMemMode_index[i]:_DomainNumatuneMemMode_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[DomainGetHostnameLease-1]
	_ = x[DomainGetHostnameAgent-2]
}

const _DomainGetHostnameFlags_name = "DomainGetHostnameLeaseDomainGetHostnameAgent"

var _DomainGetHostnameFlags_index = [...]uint8{0, 22, 44}

func (i DomainGetHostnameFlags) String() string {
	i -= 1
	if i < 0 || i >= DomainGetHostnameFlags(len(_DomainGetHostnameFlags_index)-1) {
		return "DomainGetHostnameFlags(" + strconv.FormatInt(int64(i+1), 10) + ")"
	}
	return _DomainGetHostnameFlags_name[_DomainGetHostnameFlags_index[i]:_DomainGetHostnameFlags_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[DomainMetadataDescription-0]
	_ = x[DomainMetadataTitle-1]
	_ = x[DomainMetadataElement-2]
}

const _DomainMetadataType_name = "DomainMetadataDescriptionDomainMetadataTitleDomainMetadataElement"

var _DomainMetadataType_index = [...]uint8{0, 25, 44, 65}

func (i DomainMetadataType) String() string {
	if i < 0 || i >= DomainMetadataType(len(_DomainMetadataType_index)-1) {
		return "DomainMetadataType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _DomainMetadataType_name[_DomainMetadataType_index[i]:_DomainMetadataType_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[DomainXMLSecure-1]
	_ = x[DomainXMLInactive-2]
	_ = x[DomainXMLUpdateCPU-4]
	_ = x[DomainXMLMigratable-8]
}

const (
	_DomainXMLFlags_name_0 = "DomainXMLSecureDomainXMLInactive"
	_DomainXMLFlags_name_1 = "DomainXMLUpdateCPU"
	_DomainXMLFlags_name_2 = "DomainXMLMigratable"
)

var (
	_DomainXMLFlags_index_0 = [...]uint8{0, 15, 32}
)

func (i DomainXMLFlags) String() string {
	switch {
	case 1 <= i && i <= 2:
		i -= 1
		return _DomainXMLFlags_name_0[_DomainXMLFlags_index_0[i]:_DomainXMLFlags_index_0[i+1]]
	case i == 4:
		return _DomainXMLFlags_name_1
	case i == 8:
		return _DomainXMLFlags_name_2
	default:
		return "DomainXMLFlags(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[DomainSaveImageXMLSecure-1]
}

const _DomainSaveImageXMLFlags_name = "DomainSaveImageXMLSecure"

var _DomainSaveImageXMLFlags_index = [...]uint8{0, 24}

func (i DomainSaveImageXMLFlags) String() string {
	i -= 1
	if i < 0 || i >= DomainSaveImageXMLFlags(len(_DomainSaveImageXMLFlags_index)-1) {
		return "DomainSaveImageXMLFlags(" + strconv.FormatInt(int64(i+1), 10) + ")"
	}
	return _DomainSaveImageXMLFlags_name[_DomainSaveImageXMLFlags_index[i]:_DomainSaveImageXMLFlags_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[DomainBlockResizeBytes-1]
	_ = x[DomainBlockResizeCapacity-2]
}

const _DomainBlockResizeFlags_name = "DomainBlockResizeBytesDomainBlockResizeCapacity"

var _DomainBlockResizeFlags_index = [...]uint8{0, 22, 47}

func (i DomainBlockResizeFlags) String() string {
	i -= 1
	if i < 0 || i >= DomainBlockResizeFlags(len(_DomainBlockResizeFlags_index)-1) {
		return "DomainBlockResizeFlags(" + strconv.FormatInt(int64(i+1), 10) + ")"
	}
	return _DomainBlockResizeFlags_name[_DomainBlockResizeFlags_index[i]:_DomainBlockResizeFlags_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[MemoryVirtual-1]
	_ = x[MemoryPhysical-2]
}

const _DomainMemoryFlags_name = "MemoryVirtualMemoryPhysical"

var _DomainMemoryFlags_index = [...]uint8{0, 13, 27}

func (i DomainMemoryFlags) String() string {
	i -= 1
	if i < 0 || i >= DomainMemoryFlags(len(_DomainMemoryFlags_index)-1) {
		return "DomainMemoryFlags(" + strconv.FormatInt(int64(i+1), 10) + ")"
	}
	return _DomainMemoryFlags_name[_DomainMemoryFlags_index[i]:_DomainMemoryFlags_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[DomainDefineValidate-1]
}

const _DomainDefineFlags_name = "DomainDefineValidate"

var _DomainDefineFlags_index = [...]uint8{0, 20}

func (i DomainDefineFlags) String() string {
	i -= 1
	if i < 0 || i >= DomainDefineFlags(len(_DomainDefineFlags_index)-1) {
		return "DomainDefineFlags(" + strconv.FormatInt(int64(i+1), 10) + ")"
	}
	return _DomainDefineFlags_name[_DomainDefineFlags_index[i]:_DomainDefineFlags_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[DomainUndefineManagedSave-1]
	_ = x[DomainUndefineSnapshotsMetadata-2]
	_ = x[DomainUndefineNvram-4]
	_ = x[DomainUndefineKeepNvram-8]
	_ = x[DomainUndefineCheckpointsMetadata-16]
	_ = x[DomainUndefineTpm-32]
	_ = x[DomainUndefineKeepTpm-64]
}

const (
	_DomainUndefineFlagsValues_name_0 = "DomainUndefineManagedSaveDomainUndefineSnapshotsMetadata"
	_DomainUndefineFlagsValues_name_1 = "DomainUndefineNvram"
	_DomainUndefineFlagsValues_name_2 = "DomainUndefineKeepNvram"
	_DomainUndefineFlagsValues_name_3 = "DomainUndefineCheckpointsMetadata"
	_DomainUndefineFlagsValues_name_4 = "DomainUndefineTpm"
	_DomainUndefineFlagsValues_name_5 = "DomainUndefineKeepTpm"
)

var (
	_DomainUndefineFlagsValues_index_0 = [...]uint8{0, 25, 56}
)

func (i DomainUndefineFlagsValues) String() string {
	switch {
	case 1 <= i && i <= 2:
		i -= 1
		return _DomainUndefineFlagsValues_name_0[_DomainUndefineFlagsValues_index_0[i]:_DomainUndefineFlagsValues_index_0[i+1]]
	case i == 4:
		return _DomainUndefineFlagsValues_name_1
	case i == 8:
		return _DomainUndefineFlagsValues_name_2
	case i == 16:
		return _DomainUndefineFlagsValues_name_3
	case i == 32:
		return _DomainUndefineFlagsValues_name_4
	case i == 64:
		return _DomainUndefineFlagsValues_name_5
	default:
		return "DomainUndefineFlagsValues(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[ConnectListDomainsActive-1]
	_ = x[ConnectListDomainsInactive-2]
	_ = x[ConnectListDomainsPersistent-4]
	_ = x[ConnectListDomainsTransient-8]
	_ = x[ConnectListDomainsRunning-16]
	_ = x[ConnectListDomainsPaused-32]
	_ = x[ConnectListDomainsShutoff-64]
	_ = x[ConnectListDomainsOther-128]
	_ = x[ConnectListDomainsManagedsave-256]
	_ = x[ConnectListDomainsNoManagedsave-512]
	_ = x[ConnectListDomainsAutostart-1024]
	_ = x[ConnectListDomainsNoAutostart-2048]
	_ = x[ConnectListDomainsHasSnapshot-4096]
	_ = x[ConnectListDomainsNoSnapshot-8192]
	_ = x[ConnectListDomainsHasCheckpoint-16384]
	_ = x[ConnectListDomainsNoCheckpoint-32768]
}

const _ConnectListAllDomainsFlags_name = "ConnectListDomainsActiveConnectListDomainsInactiveConnectListDomainsPersistentConnectListDomainsTransientConnectListDomainsRunningConnectListDomainsPausedConnectListDomainsShutoffConnectListDomainsOtherConnectListDomainsManagedsaveConnectListDomainsNoManagedsaveConnectListDomainsAutostartConnectListDomainsNoAutostartConnectListDomainsHasSnapshotConnectListDomainsNoSnapshotConnectListDomainsHasCheckpointConnectListDomainsNoCheckpoint"

var _ConnectListAllDomainsFlags_map = map[ConnectListAllDomainsFlags]string{
	1:     _ConnectListAllDomainsFlags_name[0:24],
	2:     _ConnectListAllDomainsFlags_name[24:50],
	4:     _ConnectListAllDomainsFlags_name[50:78],
	8:     _ConnectListAllDomainsFlags_name[78:105],
	16:    _ConnectListAllDomainsFlags_name[105:130],
	32:    _ConnectListAllDomainsFlags_name[130:154],
	64:    _ConnectListAllDomainsFlags_name[154:179],
	128:   _ConnectListAllDomainsFlags_name[179:202],
	256:   _ConnectListAllDomainsFlags_name[202:231],
	512:   _ConnectListAllDomainsFlags_name[231:262],
	1024:  _ConnectListAllDomainsFlags_name[262:289],
	2048:  _ConnectListAllDomainsFlags_name[289:318],
	4096:  _ConnectListAllDomainsFlags_name[318:347],
	8192:  _ConnectListAllDomainsFlags_name[347:375],
	16384: _ConnectListAllDomainsFlags_name[375:406],
	32768: _ConnectListAllDomainsFlags_name[406:436],
}

func (i ConnectListAllDomainsFlags) String() string {
	if str, ok := _ConnectListAllDomainsFlags_map[i]; ok {
		return str
	}
	return "ConnectListAllDomainsFlags(" + strconv.FormatInt(int64(i), 10) + ")"
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[VCPUOffline-0]
	_ = x[VCPURunning-1]
	_ = x[VCPUBlocked-2]
}

const _VCPUState_name = "VCPUOfflineVCPURunningVCPUBlocked"

var _VCPUState_index = [...]uint8{0, 11, 22, 33}

func (i VCPUState) String() string {
	if i < 0 || i >= VCPUState(len(_VCPUState_index)-1) {
		return "VCPUState(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _VCPUState_name[_VCPUState_index[i]:_VCPUState_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[VCPUInfoCPUOffline - -1]
	_ = x[VCPUInfoCPUUnavailable - -2]
}

const _VCPUHostCPUState_name = "VCPUInfoCPUUnavailableVCPUInfoCPUOffline"

var _VCPUHostCPUState_index = [...]uint8{0, 22, 40}

func (i VCPUHostCPUState) String() string {
	i -= -2
	if i < 0 || i >= VCPUHostCPUState(len(_VCPUHostCPUState_index)-1) {
		return "VCPUHostCPUState(" + strconv.FormatInt(int64(i+-2), 10) + ")"
	}
	return _VCPUHostCPUState_name[_VCPUHostCPUState_index[i]:_VCPUHostCPUState_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[DomainVCPUCurrent-0]
	_ = x[DomainVCPULive-1]
	_ = x[DomainVCPUConfig-2]
	_ = x[DomainVCPUMaximum-4]
	_ = x[DomainVCPUGuest-8]
	_ = x[DomainVCPUHotpluggable-16]
}

const (
	_DomainVCPUFlags_name_0 = "DomainVCPUCurrentDomainVCPULiveDomainVCPUConfig"
	_DomainVCPUFlags_name_1 = "DomainVCPUMaximum"
	_DomainVCPUFlags_name_2 = "DomainVCPUGuest"
	_DomainVCPUFlags_name_3 = "DomainVCPUHotpluggable"
)

var (
	_DomainVCPUFlags_index_0 = [...]uint8{0, 17, 31, 47}
)

func (i DomainVCPUFlags) String() string {
	switch {
	case 0 <= i && i <= 2:
		return _DomainVCPUFlags_name_0[_DomainVCPUFlags_index_0[i]:_DomainVCPUFlags_index_0[i+1]]
	case i == 4:
		return _DomainVCPUFlags_name_1
	case i == 8:
		return _DomainVCPUFlags_name_2
	case i == 16:
		return _DomainVCPUFlags_name_3
	default:
		return "DomainVCPUFlags(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[DomainDeviceModifyCurrent-0]
	_ = x[DomainDeviceModifyLive-1]
	_ = x[DomainDeviceModifyConfig-2]
	_ = x[DomainDeviceModifyForce-4]
}

const (
	_DomainDeviceModifyFlags_name_0 = "DomainDeviceModifyCurrentDomainDeviceModifyLiveDomainDeviceModifyConfig"
	_DomainDeviceModifyFlags_name_1 = "DomainDeviceModifyForce"
)

var (
	_DomainDeviceModifyFlags_index_0 = [...]uint8{0, 25, 47, 71}
)

func (i DomainDeviceModifyFlags) String() string {
	switch {
	case 0 <= i && i <= 2:
		return _DomainDeviceModifyFlags_name_0[_DomainDeviceModifyFlags_index_0[i]:_DomainDeviceModifyFlags_index_0[i+1]]
	case i == 4:
		return _DomainDeviceModifyFlags_name_1
	default:
		return "DomainDeviceModifyFlags(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[DomainStatsState-1]
	_ = x[DomainStatsCPUTotal-2]
	_ = x[DomainStatsBalloon-4]
	_ = x[DomainStatsVCPU-8]
	_ = x[DomainStatsInterface-16]
	_ = x[DomainStatsBlock-32]
	_ = x[DomainStatsPerf-64]
	_ = x[DomainStatsIothread-128]
	_ = x[DomainStatsMemory-256]
	_ = x[DomainStatsDirtyrate-512]
	_ = x[DomainStatsVm-1024]
}

const (
	_DomainStatsTypes_name_0 = "DomainStatsStateDomainStatsCPUTotal"
	_DomainStatsTypes_name_1 = "DomainStatsBalloon"
	_DomainStatsTypes_name_2 = "DomainStatsVCPU"
	_DomainStatsTypes_name_3 = "DomainStatsInterface"
	_DomainStatsTypes_name_4 = "DomainStatsBlock"
	_DomainStatsTypes_name_5 = "DomainStatsPerf"
	_DomainStatsTypes_name_6 = "DomainStatsIothread"
	_DomainStatsTypes_name_7 = "DomainStatsMemory"
	_DomainStatsTypes_name_8 = "DomainStatsDirtyrate"
	_DomainStatsTypes_name_9 = "DomainStatsVm"
)

var (
	_DomainStatsTypes_index_0 = [...]uint8{0, 16, 35}
)

func (i DomainStatsTypes) String() string {
	switch {
	case 1 <= i && i <= 2:
		i -= 1
		return _DomainStatsTypes_name_0[_DomainStatsTypes_index_0[i]:_DomainStatsTypes_index_0[i+1]]
	case i == 4:
		return _DomainStatsTypes_name_1
	case i == 8:
		return _DomainStatsTypes_name_2
	case i == 16:
		return _DomainStatsTypes_name_3
	case i == 32:
		return _DomainStatsTypes_name_4
	case i == 64:
		return _DomainStatsTypes_name_5
	case i == 128:
		return _DomainStatsTypes_name_6
	case i == 256:
		return _DomainStatsTypes_name_7
	case i == 512:
		return _DomainStatsTypes_name_8
	case i == 1024:
		return _DomainStatsTypes_name_9
	default:
		return "DomainStatsTypes(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[ConnectGetAllDomainsStatsActive-1]
	_ = x[ConnectGetAllDomainsStatsInactive-2]
	_ = x[ConnectGetAllDomainsStatsPersistent-4]
	_ = x[ConnectGetAllDomainsStatsTransient-8]
	_ = x[ConnectGetAllDomainsStatsRunning-16]
	_ = x[ConnectGetAllDomainsStatsPaused-32]
	_ = x[ConnectGetAllDomainsStatsShutoff-64]
	_ = x[ConnectGetAllDomainsStatsOther-128]
	_ = x[ConnectGetAllDomainsStatsNowait-536870912]
	_ = x[ConnectGetAllDomainsStatsBacking-1073741824]
	_ = x[ConnectGetAllDomainsStatsEnforceStats-2147483648]
}

const (
	_ConnectGetAllDomainStatsFlags_name_0 = "ConnectGetAllDomainsStatsActiveConnectGetAllDomainsStatsInactive"
	_ConnectGetAllDomainStatsFlags_name_1 = "ConnectGetAllDomainsStatsPersistent"
	_ConnectGetAllDomainStatsFlags_name_2 = "ConnectGetAllDomainsStatsTransient"
	_ConnectGetAllDomainStatsFlags_name_3 = "ConnectGetAllDomainsStatsRunning"
	_ConnectGetAllDomainStatsFlags_name_4 = "ConnectGetAllDomainsStatsPaused"
	_ConnectGetAllDomainStatsFlags_name_5 = "ConnectGetAllDomainsStatsShutoff"
	_ConnectGetAllDomainStatsFlags_name_6 = "ConnectGetAllDomainsStatsOther"
	_ConnectGetAllDomainStatsFlags_name_7 = "ConnectGetAllDomainsStatsNowait"
	_ConnectGetAllDomainStatsFlags_name_8 = "ConnectGetAllDomainsStatsBacking"
	_ConnectGetAllDomainStatsFlags_name_9 = "ConnectGetAllDomainsStatsEnforceStats"
)

var (
	_ConnectGetAllDomainStatsFlags_index_0 = [...]uint8{0, 31, 64}
)

func (i ConnectGetAllDomainStatsFlags) String() string {
	switch {
	case 1 <= i && i <= 2:
		i -= 1
		return _ConnectGetAllDomainStatsFlags_name_0[_ConnectGetAllDomainStatsFlags_index_0[i]:_ConnectGetAllDomainStatsFlags_index_0[i+1]]
	case i == 4:
		return _ConnectGetAllDomainStatsFlags_name_1
	case i == 8:
		return _ConnectGetAllDomainStatsFlags_name_2
	case i == 16:
		return _ConnectGetAllDomainStatsFlags_name_3
	case i == 32:
		return _ConnectGetAllDomainStatsFlags_name_4
	case i == 64:
		return _ConnectGetAllDomainStatsFlags_name_5
	case i == 128:
		return _ConnectGetAllDomainStatsFlags_name_6
	case i == 536870912:
		return _ConnectGetAllDomainStatsFlags_name_7
	case i == 1073741824:
		return _ConnectGetAllDomainStatsFlags_name_8
	case i == 2147483648:
		return _ConnectGetAllDomainStatsFlags_name_9
	default:
		return "ConnectGetAllDomainStatsFlags(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[DomainBlockJobTypeUnknown-0]
	_ = x[DomainBlockJobTypePull-1]
	_ = x[DomainBlockJobTypeCopy-2]
	_ = x[DomainBlockJobTypeCommit-3]
	_ = x[DomainBlockJobTypeActiveCommit-4]
	_ = x[DomainBlockJobTypeBackup-5]
}

const _DomainBlockJobType_name = "DomainBlockJobTypeUnknownDomainBlockJobTypePullDomainBlockJobTypeCopyDomainBlockJobTypeCommitDomainBlockJobTypeActiveCommitDomainBlockJobTypeBackup"

var _DomainBlockJobType_index = [...]uint8{0, 25, 47, 69, 93, 123, 147}

func (i DomainBlockJobType) String() string {
	if i < 0 || i >= DomainBlockJobType(len(_DomainBlockJobType_index)-1) {
		return "DomainBlockJobType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _DomainBlockJobType_name[_DomainBlockJobType_index[i]:_DomainBlockJobType_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[DomainBlockJobAbortAsync-1]
	_ = x[DomainBlockJobAbortPivot-2]
}

const _DomainBlockJobAbortFlags_name = "DomainBlockJobAbortAsyncDomainBlockJobAbortPivot"

var _DomainBlockJobAbortFlags_index = [...]uint8{0, 24, 48}

func (i DomainBlockJobAbortFlags) String() string {
	i -= 1
	if i < 0 || i >= DomainBlockJobAbortFlags(len(_DomainBlockJobAbortFlags_index)-1) {
		return "DomainBlockJobAbortFlags(" + strconv.FormatInt(int64(i+1), 10) + ")"
	}
	return _DomainBlockJobAbortFlags_name[_DomainBlockJobAbortFlags_index[i]:_DomainBlockJobAbortFlags_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[DomainBlockJobInfoBandwidthBytes-1]
}

const _DomainBlockJobInfoFlags_name = "DomainBlockJobInfoBandwidthBytes"

var _DomainBlockJobInfoFlags_index = [...]uint8{0, 32}

func (i DomainBlockJobInfoFlags) String() string {
	i -= 1
	if i < 0 || i >= DomainBlockJobInfoFlags(len(_DomainBlockJobInfoFlags_index)-1) {
		return "DomainBlockJobInfoFlags(" + strconv.FormatInt(int64(i+1), 10) + ")"
	}
	return _DomainBlockJobInfoFlags_name[_DomainBlockJobInfoFlags_index[i]:_DomainBlockJobInfoFlags_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[DomainBlockJobSpeedBandwidthBytes-1]
}

const _DomainBlockJobSetSpeedFlags_name = "DomainBlockJobSpeedBandwidthBytes"

var _DomainBlockJobSetSpeedFlags_index = [...]uint8{0, 33}

func (i DomainBlockJobSetSpeedFlags) String() string {
	i -= 1
	if i < 0 || i >= DomainBlockJobSetSpeedFlags(len(_DomainBlockJobSetSpeedFlags_index)-1) {
		return "DomainBlockJobSetSpeedFlags(" + strconv.FormatInt(int64(i+1), 10) + ")"
	}
	return _DomainBlockJobSetSpeedFlags_name[_DomainBlockJobSetSpeedFlags_index[i]:_DomainBlockJobSetSpeedFlags_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[DomainBlockPullBandwidthBytes-64]
}

const _DomainBlockPullFlags_name = "DomainBlockPullBandwidthBytes"

var _DomainBlockPullFlags_index = [...]uint8{0, 29}

func (i DomainBlockPullFlags) String() string {
	i -= 64
	if i < 0 || i >= DomainBlockPullFlags(len(_DomainBlockPullFlags_index)-1) {
		return "DomainBlockPullFlags(" + strconv.FormatInt(int64(i+64), 10) + ")"
	}
	return _DomainBlockPullFlags_name[_DomainBlockPullFlags_index[i]:_DomainBlockPullFlags_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[DomainBlockRebaseShallow-1]
	_ = x[DomainBlockRebaseReuseExt-2]
	_ = x[DomainBlockRebaseCopyRaw-4]
	_ = x[DomainBlockRebaseCopy-8]
	_ = x[DomainBlockRebaseRelative-16]
	_ = x[DomainBlockRebaseCopyDev-32]
	_ = x[DomainBlockRebaseBandwidthBytes-64]
}

const (
	_DomainBlockRebaseFlags_name_0 = "DomainBlockRebaseShallowDomainBlockRebaseReuseExt"
	_DomainBlockRebaseFlags_name_1 = "DomainBlockRebaseCopyRaw"
	_DomainBlockRebaseFlags_name_2 = "DomainBlockRebaseCopy"
	_DomainBlockRebaseFlags_name_3 = "DomainBlockRebaseRelative"
	_DomainBlockRebaseFlags_name_4 = "DomainBlockRebaseCopyDev"
	_DomainBlockRebaseFlags_name_5 = "DomainBlockRebaseBandwidthBytes"
)

var (
	_DomainBlockRebaseFlags_index_0 = [...]uint8{0, 24, 49}
)

func (i DomainBlockRebaseFlags) String() string {
	switch {
	case 1 <= i && i <= 2:
		i -= 1
		return _DomainBlockRebaseFlags_name_0[_DomainBlockRebaseFlags_index_0[i]:_DomainBlockRebaseFlags_index_0[i+1]]
	case i == 4:
		return _DomainBlockRebaseFlags_name_1
	case i == 8:
		return _DomainBlockRebaseFlags_name_2
	case i == 16:
		return _DomainBlockRebaseFlags_name_3
	case i == 32:
		return _DomainBlockRebaseFlags_name_4
	case i == 64:
		return _DomainBlockRebaseFlags_name_5
	default:
		return "DomainBlockRebaseFlags(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[DomainBlockCopyShallow-1]
	_ = x[DomainBlockCopyReuseExt-2]
	_ = x[DomainBlockCopyTransientJob-4]
	_ = x[DomainBlockCopySynchronousWrites-8]
}

const (
	_DomainBlockCopyFlags_name_0 = "DomainBlockCopyShallowDomainBlockCopyReuseExt"
	_DomainBlockCopyFlags_name_1 = "DomainBlockCopyTransientJob"
	_DomainBlockCopyFlags_name_2 = "DomainBlockCopySynchronousWrites"
)

var (
	_DomainBlockCopyFlags_index_0 = [...]uint8{0, 22, 45}
)

func (i DomainBlockCopyFlags) String() string {
	switch {
	case 1 <= i && i <= 2:
		i -= 1
		return _DomainBlockCopyFlags_name_0[_DomainBlockCopyFlags_index_0[i]:_DomainBlockCopyFlags_index_0[i+1]]
	case i == 4:
		return _DomainBlockCopyFlags_name_1
	case i == 8:
		return _DomainBlockCopyFlags_name_2
	default:
		return "DomainBlockCopyFlags(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[DomainBlockCommitShallow-1]
	_ = x[DomainBlockCommitDelete-2]
	_ = x[DomainBlockCommitActive-4]
	_ = x[DomainBlockCommitRelative-8]
	_ = x[DomainBlockCommitBandwidthBytes-16]
}

const (
	_DomainBlockCommitFlags_name_0 = "DomainBlockCommitShallowDomainBlockCommitDelete"
	_DomainBlockCommitFlags_name_1 = "DomainBlockCommitActive"
	_DomainBlockCommitFlags_name_2 = "DomainBlockCommitRelative"
	_DomainBlockCommitFlags_name_3 = "DomainBlockCommitBandwidthBytes"
)

var (
	_DomainBlockCommitFlags_index_0 = [...]uint8{0, 24, 47}
)

func (i DomainBlockCommitFlags) String() string {
	switch {
	case 1 <= i && i <= 2:
		i -= 1
		return _DomainBlockCommitFlags_name_0[_DomainBlockCommitFlags_index_0[i]:_DomainBlockCommitFlags_index_0[i+1]]
	case i == 4:
		return _DomainBlockCommitFlags_name_1
	case i == 8:
		return _DomainBlockCommitFlags_name_2
	case i == 16:
		return _DomainBlockCommitFlags_name_3
	default:
		return "DomainBlockCommitFlags(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[DomainDiskErrorNone-0]
	_ = x[DomainDiskErrorUnspec-1]
	_ = x[DomainDiskErrorNoSpace-2]
}

const _DomainDiskErrorCode_name = "DomainDiskErrorNoneDomainDiskErrorUnspecDomainDiskErrorNoSpace"

var _DomainDiskErrorCode_index = [...]uint8{0, 19, 40, 62}

func (i DomainDiskErrorCode) String() string {
	if i < 0 || i >= DomainDiskErrorCode(len(_DomainDiskErrorCode_index)-1) {
		return "DomainDiskErrorCode(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _DomainDiskErrorCode_name[_DomainDiskErrorCode_index[i]:_DomainDiskErrorCode_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[KeycodeSetLinux-0]
	_ = x[KeycodeSetXt-1]
	_ = x[KeycodeSetAtset1-2]
	_ = x[KeycodeSetAtset2-3]
	_ = x[KeycodeSetAtset3-4]
	_ = x[KeycodeSetOsx-5]
	_ = x[KeycodeSetXtKbd-6]
	_ = x[KeycodeSetUsb-7]
	_ = x[KeycodeSetWin32-8]
	_ = x[KeycodeSetQnum-9]
}

const _KeycodeSet_name = "KeycodeSetLinuxKeycodeSetXtKeycodeSetAtset1KeycodeSetAtset2KeycodeSetAtset3KeycodeSetOsxKeycodeSetXtKbdKeycodeSetUsbKeycodeSetWin32KeycodeSetQnum"

var _KeycodeSet_index = [...]uint8{0, 15, 27, 43, 59, 75, 88, 103, 116, 131, 145}

func (i KeycodeSet) String() string {
	if i < 0 || i >= KeycodeSet(len(_KeycodeSet_index)-1) {
		return "KeycodeSet(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _KeycodeSet_name[_KeycodeSet_index[i]:_KeycodeSet_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[DomainProcessSignalNop-0]
	_ = x[DomainProcessSignalHup-1]
	_ = x[DomainProcessSignalInt-2]
	_ = x[DomainProcessSignalQuit-3]
	_ = x[DomainProcessSignalIll-4]
	_ = x[DomainProcessSignalTrap-5]
	_ = x[DomainProcessSignalAbrt-6]
	_ = x[DomainProcessSignalBus-7]
	_ = x[DomainProcessSignalFpe-8]
	_ = x[DomainProcessSignalKill-9]
	_ = x[DomainProcessSignalUsr1-10]
	_ = x[DomainProcessSignalSegv-11]
	_ = x[DomainProcessSignalUsr2-12]
	_ = x[DomainProcessSignalPipe-13]
	_ = x[DomainProcessSignalAlrm-14]
	_ = x[DomainProcessSignalTerm-15]
	_ = x[DomainProcessSignalStkflt-16]
	_ = x[DomainProcessSignalChld-17]
	_ = x[DomainProcessSignalCont-18]
	_ = x[DomainProcessSignalStop-19]
	_ = x[DomainProcessSignalTstp-20]
	_ = x[DomainProcessSignalTtin-21]
	_ = x[DomainProcessSignalTtou-22]
	_ = x[DomainProcessSignalUrg-23]
	_ = x[DomainProcessSignalXcpu-24]
	_ = x[DomainProcessSignalXfsz-25]
	_ = x[DomainProcessSignalVtalrm-26]
	_ = x[DomainProcessSignalProf-27]
	_ = x[DomainProcessSignalWinch-28]
	_ = x[DomainProcessSignalPoll-29]
	_ = x[DomainProcessSignalPwr-30]
	_ = x[DomainProcessSignalSys-31]
	_ = x[DomainProcessSignalRt0-32]
	_ = x[DomainProcessSignalRt1-33]
	_ = x[DomainProcessSignalRt2-34]
	_ = x[DomainProcessSignalRt3-35]
	_ = x[DomainProcessSignalRt4-36]
	_ = x[DomainProcessSignalRt5-37]
	_ = x[DomainProcessSignalRt6-38]
	_ = x[DomainProcessSignalRt7-39]
	_ = x[DomainProcessSignalRt8-40]
	_ = x[DomainProcessSignalRt9-41]
	_ = x[DomainProcessSignalRt10-42]
	_ = x[DomainProcessSignalRt11-43]
	_ = x[DomainProcessSignalRt12-44]
	_ = x[DomainProcessSignalRt13-45]
	_ = x[DomainProcessSignalRt14-46]
	_ = x[DomainProcessSignalRt15-47]
	_ = x[DomainProcessSignalRt16-48]
	_ = x[DomainProcessSignalRt17-49]
	_ = x[DomainProcessSignalRt18-50]
	_ = x[DomainProcessSignalRt19-51]
	_ = x[DomainProcessSignalRt20-52]
	_ = x[DomainProcessSignalRt21-53]
	_ = x[DomainProcessSignalRt22-54]
	_ = x[DomainProcessSignalRt23-55]
	_ = x[DomainProcessSignalRt24-56]
	_ = x[DomainProcessSignalRt25-57]
	_ = x[DomainProcessSignalRt26-58]
	_ = x[DomainProcessSignalRt27-59]
	_ = x[DomainProcessSignalRt28-60]
	_ = x[DomainProcessSignalRt29-61]
	_ = x[DomainProcessSignalRt30-62]
	_ = x[DomainProcessSignalRt31-63]
	_ = x[DomainProcessSignalRt32-64]
}

const _DomainProcessSignal_name = "DomainProcessSignalNopDomainProcessSignalHupDomainProcessSignalIntDomainProcessSignalQuitDomainProcessSignalIllDomainProcessSignalTrapDomainProcessSignalAbrtDomainProcessSignalBusDomainProcessSignalFpeDomainProcessSignalKillDomainProcessSignalUsr1DomainProcessSignalSegvDomainProcessSignalUsr2DomainProcessSignalPipeDomainProcessSignalAlrmDomainProcessSignalTermDomainProcessSignalStkfltDomainProcessSignalChldDomainProcessSignalContDomainProcessSignalStopDomainProcessSignalTstpDomainProcessSignalTtinDomainProcessSignalTtouDomainProcessSignalUrgDomainProcessSignalXcpuDomainProcessSignalXfszDomainProcessSignalVtalrmDomainProcessSignalProfDomainProcessSignalWinchDomainProcessSignalPollDomainProcessSignalPwrDomainProcessSignalSysDomainProcessSignalRt0DomainProcessSignalRt1DomainProcessSignalRt2DomainProcessSignalRt3DomainProcessSignalRt4DomainProcessSignalRt5DomainProcessSignalRt6DomainProcessSignalRt7DomainProcessSignalRt8DomainProcessSignalRt9DomainProcessSignalRt10DomainProcessSignalRt11DomainProcessSignalRt12DomainProcessSignalRt13DomainProcessSignalRt14DomainProcessSignalRt15DomainProcessSignalRt16DomainProcessSignalRt17DomainProcessSignalRt18DomainProcessSignalRt19DomainProcessSignalRt20DomainProcessSignalRt21DomainProcessSignalRt22DomainProcessSignalRt23DomainProcessSignalRt24DomainProcessSignalRt25DomainProcessSignalRt26DomainProcessSignalRt27DomainProcessSignalRt28DomainProcessSignalRt29DomainProcessSignalRt30DomainProcessSignalRt31DomainProcessSignalRt32"

var _DomainProcessSignal_index = [...]uint16{0, 22, 44, 66, 89, 111, 134, 157, 179, 201, 224, 247, 270, 293, 316, 339, 362, 387, 410, 433, 456, 479, 502, 525, 547, 570, 593, 618, 641, 665, 688, 710, 732, 754, 776, 798, 820, 842, 864, 886, 908, 930, 952, 975, 998, 1021, 1044, 1067, 1090, 1113, 1136, 1159, 1182, 1205, 1228, 1251, 1274, 1297, 1320, 1343, 1366, 1389, 1412, 1435, 1458, 1481}

func (i DomainProcessSignal) String() string {
	if i < 0 || i >= DomainProcessSignal(len(_DomainProcessSignal_index)-1) {
		return "DomainProcessSignal(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _DomainProcessSignal_name[_DomainProcessSignal_index[i]:_DomainProcessSignal_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[DomainEventDefined-0]
	_ = x[DomainEventUndefined-1]
	_ = x[DomainEventStarted-2]
	_ = x[DomainEventSuspended-3]
	_ = x[DomainEventResumed-4]
	_ = x[DomainEventStopped-5]
	_ = x[DomainEventShutdown-6]
	_ = x[DomainEventPmsuspended-7]
	_ = x[DomainEventCrashed-8]
}

const _DomainEventType_name = "DomainEventDefinedDomainEventUndefinedDomainEventStartedDomainEventSuspendedDomainEventResumedDomainEventStoppedDomainEventShutdownDomainEventPmsuspendedDomainEventCrashed"

var _DomainEventType_index = [...]uint8{0, 18, 38, 56, 76, 94, 112, 131, 153, 171}

func (i DomainEventType) String() string {
	if i < 0 || i >= DomainEventType(len(_DomainEventType_index)-1) {
		return "DomainEventType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _DomainEventType_name[_DomainEventType_index[i]:_DomainEventType_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[DomainEventDefinedAdded-0]
	_ = x[DomainEventDefinedUpdated-1]
	_ = x[DomainEventDefinedRenamed-2]
	_ = x[DomainEventDefinedFromSnapshot-3]
}

const _DomainEventDefinedDetailType_name = "DomainEventDefinedAddedDomainEventDefinedUpdatedDomainEventDefinedRenamedDomainEventDefinedFromSnapshot"

var _DomainEventDefinedDetailType_index = [...]uint8{0, 23, 48, 73, 103}

func (i DomainEventDefinedDetailType) String() string {
	if i < 0 || i >= DomainEventDefinedDetailType(len(_DomainEventDefinedDetailType_index)-1) {
		return "DomainEventDefinedDetailType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _DomainEventDefinedDetailType_name[_DomainEventDefinedDetailType_index[i]:_DomainEventDefinedDetailType_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[DomainEventUndefinedRemoved-0]
	_ = x[DomainEventUndefinedRenamed-1]
}

const _DomainEventUndefinedDetailType_name = "DomainEventUndefinedRemovedDomainEventUndefinedRenamed"

var _DomainEventUndefinedDetailType_index = [...]uint8{0, 27, 54}

func (i DomainEventUndefinedDetailType) String() string {
	if i < 0 || i >= DomainEventUndefinedDetailType(len(_DomainEventUndefinedDetailType_index)-1) {
		return "DomainEventUndefinedDetailType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _DomainEventUndefinedDetailType_name[_DomainEventUndefinedDetailType_index[i]:_DomainEventUndefinedDetailType_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[DomainEventStartedBooted-0]
	_ = x[DomainEventStartedMigrated-1]
	_ = x[DomainEventStartedRestored-2]
	_ = x[DomainEventStartedFromSnapshot-3]
	_ = x[DomainEventStartedWakeup-4]
	_ = x[DomainEventStartedRecreated-5]
}

const _DomainEventStartedDetailType_name = "DomainEventStartedBootedDomainEventStartedMigratedDomainEventStartedRestoredDomainEventStartedFromSnapshotDomainEventStartedWakeupDomainEventStartedRecreated"

var _DomainEventStartedDetailType_index = [...]uint8{0, 24, 50, 76, 106, 130, 157}

func (i DomainEventStartedDetailType) String() string {
	if i < 0 || i >= DomainEventStartedDetailType(len(_DomainEventStartedDetailType_index)-1) {
		return "DomainEventStartedDetailType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _DomainEventStartedDetailType_name[_DomainEventStartedDetailType_index[i]:_DomainEventStartedDetailType_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[DomainEventSuspendedPaused-0]
	_ = x[DomainEventSuspendedMigrated-1]
	_ = x[DomainEventSuspendedIoerror-2]
	_ = x[DomainEventSuspendedWatchdog-3]
	_ = x[DomainEventSuspendedRestored-4]
	_ = x[DomainEventSuspendedFromSnapshot-5]
	_ = x[DomainEventSuspendedAPIError-6]
	_ = x[DomainEventSuspendedPostcopy-7]
	_ = x[DomainEventSuspendedPostcopyFailed-8]
}

const _DomainEventSuspendedDetailType_name = "DomainEventSuspendedPausedDomainEventSuspendedMigratedDomainEventSuspendedIoerrorDomainEventSuspendedWatchdogDomainEventSuspendedRestoredDomainEventSuspendedFromSnapshotDomainEventSuspendedAPIErrorDomainEventSuspendedPostcopyDomainEventSuspendedPostcopyFailed"

var _DomainEventSuspendedDetailType_index = [...]uint16{0, 26, 54, 81, 109, 137, 169, 197, 225, 259}

func (i DomainEventSuspendedDetailType) String() string {
	if i < 0 || i >= DomainEventSuspendedDetailType(len(_DomainEventSuspendedDetailType_index)-1) {
		return "DomainEventSuspendedDetailType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _DomainEventSuspendedDetailType_name[_DomainEventSuspendedDetailType_index[i]:_DomainEventSuspendedDetailType_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[DomainEventResumedUnpaused-0]
	_ = x[DomainEventResumedMigrated-1]
	_ = x[DomainEventResumedFromSnapshot-2]
	_ = x[DomainEventResumedPostcopy-3]
	_ = x[DomainEventResumedPostcopyFailed-4]
}

const _DomainEventResumedDetailType_name = "DomainEventResumedUnpausedDomainEventResumedMigratedDomainEventResumedFromSnapshotDomainEventResumedPostcopyDomainEventResumedPostcopyFailed"

var _DomainEventResumedDetailType_index = [...]uint8{0, 26, 52, 82, 108, 140}

func (i DomainEventResumedDetailType) String() string {
	if i < 0 || i >= DomainEventResumedDetailType(len(_DomainEventResumedDetailType_index)-1) {
		return "DomainEventResumedDetailType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _DomainEventResumedDetailType_name[_DomainEventResumedDetailType_index[i]:_DomainEventResumedDetailType_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[DomainEventStoppedShutdown-0]
	_ = x[DomainEventStoppedDestroyed-1]
	_ = x[DomainEventStoppedCrashed-2]
	_ = x[DomainEventStoppedMigrated-3]
	_ = x[DomainEventStoppedSaved-4]
	_ = x[DomainEventStoppedFailed-5]
	_ = x[DomainEventStoppedFromSnapshot-6]
	_ = x[DomainEventStoppedRecreated-7]
}

const _DomainEventStoppedDetailType_name = "DomainEventStoppedShutdownDomainEventStoppedDestroyedDomainEventStoppedCrashedDomainEventStoppedMigratedDomainEventStoppedSavedDomainEventStoppedFailedDomainEventStoppedFromSnapshotDomainEventStoppedRecreated"

var _DomainEventStoppedDetailType_index = [...]uint8{0, 26, 53, 78, 104, 127, 151, 181, 208}

func (i DomainEventStoppedDetailType) String() string {
	if i < 0 || i >= DomainEventStoppedDetailType(len(_DomainEventStoppedDetailType_index)-1) {
		return "DomainEventStoppedDetailType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _DomainEventStoppedDetailType_name[_DomainEventStoppedDetailType_index[i]:_DomainEventStoppedDetailType_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[DomainEventShutdownFinished-0]
	_ = x[DomainEventShutdownGuest-1]
	_ = x[DomainEventShutdownHost-2]
}

const _DomainEventShutdownDetailType_name = "DomainEventShutdownFinishedDomainEventShutdownGuestDomainEventShutdownHost"

var _DomainEventShutdownDetailType_index = [...]uint8{0, 27, 51, 74}

func (i DomainEventShutdownDetailType) String() string {
	if i < 0 || i >= DomainEventShutdownDetailType(len(_DomainEventShutdownDetailType_index)-1) {
		return "DomainEventShutdownDetailType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _DomainEventShutdownDetailType_name[_DomainEventShutdownDetailType_index[i]:_DomainEventShutdownDetailType_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[DomainEventPmsuspendedMemory-0]
	_ = x[DomainEventPmsuspendedDisk-1]
}

const _DomainEventPMSuspendedDetailType_name = "DomainEventPmsuspendedMemoryDomainEventPmsuspendedDisk"

var _DomainEventPMSuspendedDetailType_index = [...]uint8{0, 28, 54}

func (i DomainEventPMSuspendedDetailType) String() string {
	if i < 0 || i >= DomainEventPMSuspendedDetailType(len(_DomainEventPMSuspendedDetailType_index)-1) {
		return "DomainEventPMSuspendedDetailType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _DomainEventPMSuspendedDetailType_name[_DomainEventPMSuspendedDetailType_index[i]:_DomainEventPMSuspendedDetailType_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[DomainEventCrashedPanicked-0]
	_ = x[DomainEventCrashedCrashloaded-1]
}

const _DomainEventCrashedDetailType_name = "DomainEventCrashedPanickedDomainEventCrashedCrashloaded"

var _DomainEventCrashedDetailType_index = [...]uint8{0, 26, 55}

func (i DomainEventCrashedDetailType) String() string {
	if i < 0 || i >= DomainEventCrashedDetailType(len(_DomainEventCrashedDetailType_index)-1) {
		return "DomainEventCrashedDetailType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _DomainEventCrashedDetailType_name[_DomainEventCrashedDetailType_index[i]:_DomainEventCrashedDetailType_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[DomainEventMemoryFailureRecipientHypervisor-0]
	_ = x[DomainEventMemoryFailureRecipientGuest-1]
}

const _DomainMemoryFailureRecipientType_name = "DomainEventMemoryFailureRecipientHypervisorDomainEventMemoryFailureRecipientGuest"

var _DomainMemoryFailureRecipientType_index = [...]uint8{0, 43, 81}

func (i DomainMemoryFailureRecipientType) String() string {
	if i < 0 || i >= DomainMemoryFailureRecipientType(len(_DomainMemoryFailureRecipientType_index)-1) {
		return "DomainMemoryFailureRecipientType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _DomainMemoryFailureRecipientType_name[_DomainMemoryFailureRecipientType_index[i]:_DomainMemoryFailureRecipientType_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[DomainEventMemoryFailureActionIgnore-0]
	_ = x[DomainEventMemoryFailureActionInject-1]
	_ = x[DomainEventMemoryFailureActionFatal-2]
	_ = x[DomainEventMemoryFailureActionReset-3]
}

const _DomainMemoryFailureActionType_name = "DomainEventMemoryFailureActionIgnoreDomainEventMemoryFailureActionInjectDomainEventMemoryFailureActionFatalDomainEventMemoryFailureActionReset"

var _DomainMemoryFailureActionType_index = [...]uint8{0, 36, 72, 107, 142}

func (i DomainMemoryFailureActionType) String() string {
	if i < 0 || i >= DomainMemoryFailureActionType(len(_DomainMemoryFailureActionType_index)-1) {
		return "DomainMemoryFailureActionType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _DomainMemoryFailureActionType_name[_DomainMemoryFailureActionType_index[i]:_DomainMemoryFailureActionType_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[DomainMemoryFailureActionRequired-1]
	_ = x[DomainMemoryFailureRecursive-2]
}

const _DomainMemoryFailureFlags_name = "DomainMemoryFailureActionRequiredDomainMemoryFailureRecursive"

var _DomainMemoryFailureFlags_index = [...]uint8{0, 33, 61}

func (i DomainMemoryFailureFlags) String() string {
	i -= 1
	if i < 0 || i >= DomainMemoryFailureFlags(len(_DomainMemoryFailureFlags_index)-1) {
		return "DomainMemoryFailureFlags(" + strconv.FormatInt(int64(i+1), 10) + ")"
	}
	return _DomainMemoryFailureFlags_name[_DomainMemoryFailureFlags_index[i]:_DomainMemoryFailureFlags_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[DomainJobNone-0]
	_ = x[DomainJobBounded-1]
	_ = x[DomainJobUnbounded-2]
	_ = x[DomainJobCompleted-3]
	_ = x[DomainJobFailed-4]
	_ = x[DomainJobCancelled-5]
}

const _DomainJobType_name = "DomainJobNoneDomainJobBoundedDomainJobUnboundedDomainJobCompletedDomainJobFailedDomainJobCancelled"

var _DomainJobType_index = [...]uint8{0, 13, 29, 47, 65, 80, 98}

func (i DomainJobType) String() string {
	if i < 0 || i >= DomainJobType(len(_DomainJobType_index)-1) {
		return "DomainJobType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _DomainJobType_name[_DomainJobType_index[i]:_DomainJobType_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[DomainJobStatsCompleted-1]
	_ = x[DomainJobStatsKeepCompleted-2]
}

const _DomainGetJobStatsFlags_name = "DomainJobStatsCompletedDomainJobStatsKeepCompleted"

var _DomainGetJobStatsFlags_index = [...]uint8{0, 23, 50}

func (i DomainGetJobStatsFlags) String() string {
	i -= 1
	if i < 0 || i >= DomainGetJobStatsFlags(len(_DomainGetJobStatsFlags_index)-1) {
		return "DomainGetJobStatsFlags(" + strconv.FormatInt(int64(i+1), 10) + ")"
	}
	return _DomainGetJobStatsFlags_name[_DomainGetJobStatsFlags_index[i]:_DomainGetJobStatsFlags_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[DomainAbortJobPostcopy-1]
}

const _DomainAbortJobFlagsValues_name = "DomainAbortJobPostcopy"

var _DomainAbortJobFlagsValues_index = [...]uint8{0, 22}

func (i DomainAbortJobFlagsValues) String() string {
	i -= 1
	if i < 0 || i >= DomainAbortJobFlagsValues(len(_DomainAbortJobFlagsValues_index)-1) {
		return "DomainAbortJobFlagsValues(" + strconv.FormatInt(int64(i+1), 10) + ")"
	}
	return _DomainAbortJobFlagsValues_name[_DomainAbortJobFlagsValues_index[i]:_DomainAbortJobFlagsValues_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[DomainJobOperationStrUnknown-0]
	_ = x[DomainJobOperationStrStart-1]
	_ = x[DomainJobOperationStrSave-2]
	_ = x[DomainJobOperationStrRestore-3]
	_ = x[DomainJobOperationStrMigrationIn-4]
	_ = x[DomainJobOperationStrMigrationOut-5]
	_ = x[DomainJobOperationStrSnapshot-6]
	_ = x[DomainJobOperationStrSnapshotRevert-7]
	_ = x[DomainJobOperationStrDump-8]
	_ = x[DomainJobOperationStrBackup-9]
	_ = x[DomainJobOperationStrSnapshotDelete-10]
}

const _DomainJobOperation_name = "DomainJobOperationStrUnknownDomainJobOperationStrStartDomainJobOperationStrSaveDomainJobOperationStrRestoreDomainJobOperationStrMigrationInDomainJobOperationStrMigrationOutDomainJobOperationStrSnapshotDomainJobOperationStrSnapshotRevertDomainJobOperationStrDumpDomainJobOperationStrBackupDomainJobOperationStrSnapshotDelete"

var _DomainJobOperation_index = [...]uint16{0, 28, 54, 79, 107, 139, 172, 201, 236, 261, 288, 323}

func (i DomainJobOperation) String() string {
	if i < 0 || i >= DomainJobOperation(len(_DomainJobOperation_index)-1) {
		return "DomainJobOperation(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _DomainJobOperation_name[_DomainJobOperation_index[i]:_DomainJobOperation_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[DomainEventWatchdogNone-0]
	_ = x[DomainEventWatchdogPause-1]
	_ = x[DomainEventWatchdogReset-2]
	_ = x[DomainEventWatchdogPoweroff-3]
	_ = x[DomainEventWatchdogShutdown-4]
	_ = x[DomainEventWatchdogDebug-5]
	_ = x[DomainEventWatchdogInjectnmi-6]
}

const _DomainEventWatchdogAction_name = "DomainEventWatchdogNoneDomainEventWatchdogPauseDomainEventWatchdogResetDomainEventWatchdogPoweroffDomainEventWatchdogShutdownDomainEventWatchdogDebugDomainEventWatchdogInjectnmi"

var _DomainEventWatchdogAction_index = [...]uint8{0, 23, 47, 71, 98, 125, 149, 177}

func (i DomainEventWatchdogAction) String() string {
	if i < 0 || i >= DomainEventWatchdogAction(len(_DomainEventWatchdogAction_index)-1) {
		return "DomainEventWatchdogAction(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _DomainEventWatchdogAction_name[_DomainEventWatchdogAction_index[i]:_DomainEventWatchdogAction_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[DomainEventIoErrorNone-0]
	_ = x[DomainEventIoErrorPause-1]
	_ = x[DomainEventIoErrorReport-2]
}

const _DomainEventIOErrorAction_name = "DomainEventIoErrorNoneDomainEventIoErrorPauseDomainEventIoErrorReport"

var _DomainEventIOErrorAction_index = [...]uint8{0, 22, 45, 69}

func (i DomainEventIOErrorAction) String() string {
	if i < 0 || i >= DomainEventIOErrorAction(len(_DomainEventIOErrorAction_index)-1) {
		return "DomainEventIOErrorAction(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _DomainEventIOErrorAction_name[_DomainEventIOErrorAction_index[i]:_DomainEventIOErrorAction_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[DomainEventGraphicsConnect-0]
	_ = x[DomainEventGraphicsInitialize-1]
	_ = x[DomainEventGraphicsDisconnect-2]
}

const _DomainEventGraphicsPhase_name = "DomainEventGraphicsConnectDomainEventGraphicsInitializeDomainEventGraphicsDisconnect"

var _DomainEventGraphicsPhase_index = [...]uint8{0, 26, 55, 84}

func (i DomainEventGraphicsPhase) String() string {
	if i < 0 || i >= DomainEventGraphicsPhase(len(_DomainEventGraphicsPhase_index)-1) {
		return "DomainEventGraphicsPhase(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _DomainEventGraphicsPhase_name[_DomainEventGraphicsPhase_index[i]:_DomainEventGraphicsPhase_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[DomainEventGraphicsAddressIpv4-0]
	_ = x[DomainEventGraphicsAddressIpv6-1]
	_ = x[DomainEventGraphicsAddressUnix-2]
}

const _DomainEventGraphicsAddressType_name = "DomainEventGraphicsAddressIpv4DomainEventGraphicsAddressIpv6DomainEventGraphicsAddressUnix"

var _DomainEventGraphicsAddressType_index = [...]uint8{0, 30, 60, 90}

func (i DomainEventGraphicsAddressType) String() string {
	if i < 0 || i >= DomainEventGraphicsAddressType(len(_DomainEventGraphicsAddressType_index)-1) {
		return "DomainEventGraphicsAddressType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _DomainEventGraphicsAddressType_name[_DomainEventGraphicsAddressType_index[i]:_DomainEventGraphicsAddressType_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[DomainBlockJobCompleted-0]
	_ = x[DomainBlockJobFailed-1]
	_ = x[DomainBlockJobCanceled-2]
	_ = x[DomainBlockJobReady-3]
}

const _ConnectDomainEventBlockJobStatus_name = "DomainBlockJobCompletedDomainBlockJobFailedDomainBlockJobCanceledDomainBlockJobReady"

var _ConnectDomainEventBlockJobStatus_index = [...]uint8{0, 23, 43, 65, 84}

func (i ConnectDomainEventBlockJobStatus) String() string {
	if i < 0 || i >= ConnectDomainEventBlockJobStatus(len(_ConnectDomainEventBlockJobStatus_index)-1) {
		return "ConnectDomainEventBlockJobStatus(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _ConnectDomainEventBlockJobStatus_name[_ConnectDomainEventBlockJobStatus_index[i]:_ConnectDomainEventBlockJobStatus_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[DomainEventDiskChangeMissingOnStart-0]
	_ = x[DomainEventDiskDropMissingOnStart-1]
}

const _ConnectDomainEventDiskChangeReason_name = "DomainEventDiskChangeMissingOnStartDomainEventDiskDropMissingOnStart"

var _ConnectDomainEventDiskChangeReason_index = [...]uint8{0, 35, 68}

func (i ConnectDomainEventDiskChangeReason) String() string {
	if i < 0 || i >= ConnectDomainEventDiskChangeReason(len(_ConnectDomainEventDiskChangeReason_index)-1) {
		return "ConnectDomainEventDiskChangeReason(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _ConnectDomainEventDiskChangeReason_name[_ConnectDomainEventDiskChangeReason_index[i]:_ConnectDomainEventDiskChangeReason_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[DomainEventTrayChangeOpen-0]
	_ = x[DomainEventTrayChangeClose-1]
}

const _DomainEventTrayChangeReason_name = "DomainEventTrayChangeOpenDomainEventTrayChangeClose"

var _DomainEventTrayChangeReason_index = [...]uint8{0, 25, 51}

func (i DomainEventTrayChangeReason) String() string {
	if i < 0 || i >= DomainEventTrayChangeReason(len(_DomainEventTrayChangeReason_index)-1) {
		return "DomainEventTrayChangeReason(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _DomainEventTrayChangeReason_name[_DomainEventTrayChangeReason_index[i]:_DomainEventTrayChangeReason_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[ConnectDomainEventAgentLifecycleStateConnected-1]
	_ = x[ConnectDomainEventAgentLifecycleStateDisconnected-2]
}

const _ConnectDomainEventAgentLifecycleState_name = "ConnectDomainEventAgentLifecycleStateConnectedConnectDomainEventAgentLifecycleStateDisconnected"

var _ConnectDomainEventAgentLifecycleState_index = [...]uint8{0, 46, 95}

func (i ConnectDomainEventAgentLifecycleState) String() string {
	i -= 1
	if i < 0 || i >= ConnectDomainEventAgentLifecycleState(len(_ConnectDomainEventAgentLifecycleState_index)-1) {
		return "ConnectDomainEventAgentLifecycleState(" + strconv.FormatInt(int64(i+1), 10) + ")"
	}
	return _ConnectDomainEventAgentLifecycleState_name[_ConnectDomainEventAgentLifecycleState_index[i]:_ConnectDomainEventAgentLifecycleState_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[ConnectDomainEventAgentLifecycleReasonUnknown-0]
	_ = x[ConnectDomainEventAgentLifecycleReasonDomainStarted-1]
	_ = x[ConnectDomainEventAgentLifecycleReasonChannel-2]
}

const _ConnectDomainEventAgentLifecycleReason_name = "ConnectDomainEventAgentLifecycleReasonUnknownConnectDomainEventAgentLifecycleReasonDomainStartedConnectDomainEventAgentLifecycleReasonChannel"

var _ConnectDomainEventAgentLifecycleReason_index = [...]uint8{0, 45, 96, 141}

func (i ConnectDomainEventAgentLifecycleReason) String() string {
	if i < 0 || i >= ConnectDomainEventAgentLifecycleReason(len(_ConnectDomainEventAgentLifecycleReason_index)-1) {
		return "ConnectDomainEventAgentLifecycleReason(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _ConnectDomainEventAgentLifecycleReason_name[_ConnectDomainEventAgentLifecycleReason_index[i]:_ConnectDomainEventAgentLifecycleReason_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[DomainEventIDLifecycle-0]
	_ = x[DomainEventIDReboot-1]
	_ = x[DomainEventIDRtcChange-2]
	_ = x[DomainEventIDWatchdog-3]
	_ = x[DomainEventIDIoError-4]
	_ = x[DomainEventIDGraphics-5]
	_ = x[DomainEventIDIoErrorReason-6]
	_ = x[DomainEventIDControlError-7]
	_ = x[DomainEventIDBlockJob-8]
	_ = x[DomainEventIDDiskChange-9]
	_ = x[DomainEventIDTrayChange-10]
	_ = x[DomainEventIDPmwakeup-11]
	_ = x[DomainEventIDPmsuspend-12]
	_ = x[DomainEventIDBalloonChange-13]
	_ = x[DomainEventIDPmsuspendDisk-14]
	_ = x[DomainEventIDDeviceRemoved-15]
	_ = x[DomainEventIDBlockJob2-16]
	_ = x[DomainEventIDTunable-17]
	_ = x[DomainEventIDAgentLifecycle-18]
	_ = x[DomainEventIDDeviceAdded-19]
	_ = x[DomainEventIDMigrationIteration-20]
	_ = x[DomainEventIDJobCompleted-21]
	_ = x[DomainEventIDDeviceRemovalFailed-22]
	_ = x[DomainEventIDMetadataChange-23]
	_ = x[DomainEventIDBlockThreshold-24]
	_ = x[DomainEventIDMemoryFailure-25]
	_ = x[DomainEventIDMemoryDeviceSizeChange-26]
	_ = x[DomainEventIDNicMacChange-27]
}

const _DomainEventID_name = "DomainEventIDLifecycleDomainEventIDRebootDomainEventIDRtcChangeDomainEventIDWatchdogDomainEventIDIoErrorDomainEventIDGraphicsDomainEventIDIoErrorReasonDomainEventIDControlErrorDomainEventIDBlockJobDomainEventIDDiskChangeDomainEventIDTrayChangeDomainEventIDPmwakeupDomainEventIDPmsuspendDomainEventIDBalloonChangeDomainEventIDPmsuspendDiskDomainEventIDDeviceRemovedDomainEventIDBlockJob2DomainEventIDTunableDomainEventIDAgentLifecycleDomainEventIDDeviceAddedDomainEventIDMigrationIterationDomainEventIDJobCompletedDomainEventIDDeviceRemovalFailedDomainEventIDMetadataChangeDomainEventIDBlockThresholdDomainEventIDMemoryFailureDomainEventIDMemoryDeviceSizeChangeDomainEventIDNicMacChange"

var _DomainEventID_index = [...]uint16{0, 22, 41, 63, 84, 104, 125, 151, 176, 197, 220, 243, 264, 286, 312, 338, 364, 386, 406, 433, 457, 488, 513, 545, 572, 599, 625, 660, 685}

func (i DomainEventID) String() string {
	if i < 0 || i >= DomainEventID(len(_DomainEventID_index)-1) {
		return "DomainEventID(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _DomainEventID_name[_DomainEventID_index[i]:_DomainEventID_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[DomainConsoleForce-1]
	_ = x[DomainConsoleSafe-2]
}

const _DomainConsoleFlags_name = "DomainConsoleForceDomainConsoleSafe"

var _DomainConsoleFlags_index = [...]uint8{0, 18, 35}

func (i DomainConsoleFlags) String() string {
	i -= 1
	if i < 0 || i >= DomainConsoleFlags(len(_DomainConsoleFlags_index)-1) {
		return "DomainConsoleFlags(" + strconv.FormatInt(int64(i+1), 10) + ")"
	}
	return _DomainConsoleFlags_name[_DomainConsoleFlags_index[i]:_DomainConsoleFlags_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[DomainChannelForce-1]
}

const _DomainChannelFlags_name = "DomainChannelForce"

var _DomainChannelFlags_index = [...]uint8{0, 18}

func (i DomainChannelFlags) String() string {
	i -= 1
	if i < 0 || i >= DomainChannelFlags(len(_DomainChannelFlags_index)-1) {
		return "DomainChannelFlags(" + strconv.FormatInt(int64(i+1), 10) + ")"
	}
	return _DomainChannelFlags_name[_DomainChannelFlags_index[i]:_DomainChannelFlags_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[DomainOpenGraphicsSkipauth-1]
}

const _DomainOpenGraphicsFlags_name = "DomainOpenGraphicsSkipauth"

var _DomainOpenGraphicsFlags_index = [...]uint8{0, 26}

func (i DomainOpenGraphicsFlags) String() string {
	i -= 1
	if i < 0 || i >= DomainOpenGraphicsFlags(len(_DomainOpenGraphicsFlags_index)-1) {
		return "DomainOpenGraphicsFlags(" + strconv.FormatInt(int64(i+1), 10) + ")"
	}
	return _DomainOpenGraphicsFlags_name[_DomainOpenGraphicsFlags_index[i]:_DomainOpenGraphicsFlags_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[DomainTimeSync-1]
}

const _DomainSetTimeFlags_name = "DomainTimeSync"

var _DomainSetTimeFlags_index = [...]uint8{0, 14}

func (i DomainSetTimeFlags) String() string {
	i -= 1
	if i < 0 || i >= DomainSetTimeFlags(len(_DomainSetTimeFlags_index)-1) {
		return "DomainSetTimeFlags(" + strconv.FormatInt(int64(i+1), 10) + ")"
	}
	return _DomainSetTimeFlags_name[_DomainSetTimeFlags_index[i]:_DomainSetTimeFlags_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[DomainSchedFieldInt-1]
	_ = x[DomainSchedFieldUint-2]
	_ = x[DomainSchedFieldLlong-3]
	_ = x[DomainSchedFieldUllong-4]
	_ = x[DomainSchedFieldDouble-5]
	_ = x[DomainSchedFieldBoolean-6]
}

const _SchedParameterType_name = "DomainSchedFieldIntDomainSchedFieldUintDomainSchedFieldLlongDomainSchedFieldUllongDomainSchedFieldDoubleDomainSchedFieldBoolean"

var _SchedParameterType_index = [...]uint8{0, 19, 39, 60, 82, 104, 127}

func (i SchedParameterType) String() string {
	i -= 1
	if i < 0 || i >= SchedParameterType(len(_SchedParameterType_index)-1) {
		return "SchedParameterType(" + strconv.FormatInt(int64(i+1), 10) + ")"
	}
	return _SchedParameterType_name[_SchedParameterType_index[i]:_SchedParameterType_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[DomainBlkioParamInt-1]
	_ = x[DomainBlkioParamUint-2]
	_ = x[DomainBlkioParamLlong-3]
	_ = x[DomainBlkioParamUllong-4]
	_ = x[DomainBlkioParamDouble-5]
	_ = x[DomainBlkioParamBoolean-6]
}

const _BlkioParameterType_name = "DomainBlkioParamIntDomainBlkioParamUintDomainBlkioParamLlongDomainBlkioParamUllongDomainBlkioParamDoubleDomainBlkioParamBoolean"

var _BlkioParameterType_index = [...]uint8{0, 19, 39, 60, 82, 104, 127}

func (i BlkioParameterType) String() string {
	i -= 1
	if i < 0 || i >= BlkioParameterType(len(_BlkioParameterType_index)-1) {
		return "BlkioParameterType(" + strconv.FormatInt(int64(i+1), 10) + ")"
	}
	return _BlkioParameterType_name[_BlkioParameterType_index[i]:_BlkioParameterType_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[DomainMemoryParamInt-1]
	_ = x[DomainMemoryParamUint-2]
	_ = x[DomainMemoryParamLlong-3]
	_ = x[DomainMemoryParamUllong-4]
	_ = x[DomainMemoryParamDouble-5]
	_ = x[DomainMemoryParamBoolean-6]
}

const _MemoryParameterType_name = "DomainMemoryParamIntDomainMemoryParamUintDomainMemoryParamLlongDomainMemoryParamUllongDomainMemoryParamDoubleDomainMemoryParamBoolean"

var _MemoryParameterType_index = [...]uint8{0, 20, 41, 63, 86, 109, 133}

func (i MemoryParameterType) String() string {
	i -= 1
	if i < 0 || i >= MemoryParameterType(len(_MemoryParameterType_index)-1) {
		return "MemoryParameterType(" + strconv.FormatInt(int64(i+1), 10) + ")"
	}
	return _MemoryParameterType_name[_MemoryParameterType_index[i]:_MemoryParameterType_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[DomainInterfaceAddressesSrcLease-0]
	_ = x[DomainInterfaceAddressesSrcAgent-1]
	_ = x[DomainInterfaceAddressesSrcArp-2]
}

const _DomainInterfaceAddressesSource_name = "DomainInterfaceAddressesSrcLeaseDomainInterfaceAddressesSrcAgentDomainInterfaceAddressesSrcArp"

var _DomainInterfaceAddressesSource_index = [...]uint8{0, 32, 64, 94}

func (i DomainInterfaceAddressesSource) String() string {
	if i < 0 || i >= DomainInterfaceAddressesSource(len(_DomainInterfaceAddressesSource_index)-1) {
		return "DomainInterfaceAddressesSource(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _DomainInterfaceAddressesSource_name[_DomainInterfaceAddressesSource_index[i]:_DomainInterfaceAddressesSource_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[DomainPasswordEncrypted-1]
}

const _DomainSetUserPasswordFlags_name = "DomainPasswordEncrypted"

var _DomainSetUserPasswordFlags_index = [...]uint8{0, 23}

func (i DomainSetUserPasswordFlags) String() string {
	i -= 1
	if i < 0 || i >= DomainSetUserPasswordFlags(len(_DomainSetUserPasswordFlags_index)-1) {
		return "DomainSetUserPasswordFlags(" + strconv.FormatInt(int64(i+1), 10) + ")"
	}
	return _DomainSetUserPasswordFlags_name[_DomainSetUserPasswordFlags_index[i]:_DomainSetUserPasswordFlags_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[DomainLifecyclePoweroff-0]
	_ = x[DomainLifecycleReboot-1]
	_ = x[DomainLifecycleCrash-2]
}

const _DomainLifecycle_name = "DomainLifecyclePoweroffDomainLifecycleRebootDomainLifecycleCrash"

var _DomainLifecycle_index = [...]uint8{0, 23, 44, 64}

func (i DomainLifecycle) String() string {
	if i < 0 || i >= DomainLifecycle(len(_DomainLifecycle_index)-1) {
		return "DomainLifecycle(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _DomainLifecycle_name[_DomainLifecycle_index[i]:_DomainLifecycle_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[DomainLifecycleActionDestroy-0]
	_ = x[DomainLifecycleActionRestart-1]
	_ = x[DomainLifecycleActionRestartRename-2]
	_ = x[DomainLifecycleActionPreserve-3]
	_ = x[DomainLifecycleActionCoredumpDestroy-4]
	_ = x[DomainLifecycleActionCoredumpRestart-5]
}

const _DomainLifecycleAction_name = "DomainLifecycleActionDestroyDomainLifecycleActionRestartDomainLifecycleActionRestartRenameDomainLifecycleActionPreserveDomainLifecycleActionCoredumpDestroyDomainLifecycleActionCoredumpRestart"

var _DomainLifecycleAction_index = [...]uint8{0, 28, 56, 90, 119, 155, 191}

func (i DomainLifecycleAction) String() string {
	if i < 0 || i >= DomainLifecycleAction(len(_DomainLifecycleAction_index)-1) {
		return "DomainLifecycleAction(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _DomainLifecycleAction_name[_DomainLifecycleAction_index[i]:_DomainLifecycleAction_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[DomainGuestInfoUsers-1]
	_ = x[DomainGuestInfoOs-2]
	_ = x[DomainGuestInfoTimezone-4]
	_ = x[DomainGuestInfoHostname-8]
	_ = x[DomainGuestInfoFilesystem-16]
	_ = x[DomainGuestInfoDisks-32]
	_ = x[DomainGuestInfoInterfaces-64]
	_ = x[DomainGuestInfoLoad-128]
}

const (
	_DomainGuestInfoTypes_name_0 = "DomainGuestInfoUsersDomainGuestInfoOs"
	_DomainGuestInfoTypes_name_1 = "DomainGuestInfoTimezone"
	_DomainGuestInfoTypes_name_2 = "DomainGuestInfoHostname"
	_DomainGuestInfoTypes_name_3 = "DomainGuestInfoFilesystem"
	_DomainGuestInfoTypes_name_4 = "DomainGuestInfoDisks"
	_DomainGuestInfoTypes_name_5 = "DomainGuestInfoInterfaces"
	_DomainGuestInfoTypes_name_6 = "DomainGuestInfoLoad"
)

var (
	_DomainGuestInfoTypes_index_0 = [...]uint8{0, 20, 37}
)

func (i DomainGuestInfoTypes) String() string {
	switch {
	case 1 <= i && i <= 2:
		i -= 1
		return _DomainGuestInfoTypes_name_0[_DomainGuestInfoTypes_index_0[i]:_DomainGuestInfoTypes_index_0[i+1]]
	case i == 4:
		return _DomainGuestInfoTypes_name_1
	case i == 8:
		return _DomainGuestInfoTypes_name_2
	case i == 16:
		return _DomainGuestInfoTypes_name_3
	case i == 32:
		return _DomainGuestInfoTypes_name_4
	case i == 64:
		return _DomainGuestInfoTypes_name_5
	case i == 128:
		return _DomainGuestInfoTypes_name_6
	default:
		return "DomainGuestInfoTypes(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[DomainAgentResponseTimeoutBlock - -2]
	_ = x[DomainAgentResponseTimeoutDefault - -1]
	_ = x[DomainAgentResponseTimeoutNowait-0]
}

const _DomainAgentResponseTimeoutValues_name = "DomainAgentResponseTimeoutBlockDomainAgentResponseTimeoutDefaultDomainAgentResponseTimeoutNowait"

var _DomainAgentResponseTimeoutValues_index = [...]uint8{0, 31, 64, 96}

func (i DomainAgentResponseTimeoutValues) String() string {
	i -= -2
	if i < 0 || i >= DomainAgentResponseTimeoutValues(len(_DomainAgentResponseTimeoutValues_index)-1) {
		return "DomainAgentResponseTimeoutValues(" + strconv.FormatInt(int64(i+-2), 10) + ")"
	}
	return _DomainAgentResponseTimeoutValues_name[_DomainAgentResponseTimeoutValues_index[i]:_DomainAgentResponseTimeoutValues_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[DomainBackupBeginReuseExternal-1]
}

const _DomainBackupBeginFlags_name = "DomainBackupBeginReuseExternal"

var _DomainBackupBeginFlags_index = [...]uint8{0, 30}

func (i DomainBackupBeginFlags) String() string {
	i -= 1
	if i < 0 || i >= DomainBackupBeginFlags(len(_DomainBackupBeginFlags_index)-1) {
		return "DomainBackupBeginFlags(" + strconv.FormatInt(int64(i+1), 10) + ")"
	}
	return _DomainBackupBeginFlags_name[_DomainBackupBeginFlags_index[i]:_DomainBackupBeginFlags_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[DomainAuthorizedSSHKeysSetAppend-1]
	_ = x[DomainAuthorizedSSHKeysSetRemove-2]
}

const _DomainAuthorizedSSHKeysSetFlags_name = "DomainAuthorizedSSHKeysSetAppendDomainAuthorizedSSHKeysSetRemove"

var _DomainAuthorizedSSHKeysSetFlags_index = [...]uint8{0, 32, 64}

func (i DomainAuthorizedSSHKeysSetFlags) String() string {
	i -= 1
	if i < 0 || i >= DomainAuthorizedSSHKeysSetFlags(len(_DomainAuthorizedSSHKeysSetFlags_index)-1) {
		return "DomainAuthorizedSSHKeysSetFlags(" + strconv.FormatInt(int64(i+1), 10) + ")"
	}
	return _DomainAuthorizedSSHKeysSetFlags_name[_DomainAuthorizedSSHKeysSetFlags_index[i]:_DomainAuthorizedSSHKeysSetFlags_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[DomainMessageDeprecation-1]
	_ = x[DomainMessageTainting-2]
	_ = x[DomainMessageIoerrors-4]
}

const (
	_DomainMessageType_name_0 = "DomainMessageDeprecationDomainMessageTainting"
	_DomainMessageType_name_1 = "DomainMessageIoerrors"
)

var (
	_DomainMessageType_index_0 = [...]uint8{0, 24, 45}
)

func (i DomainMessageType) String() string {
	switch {
	case 1 <= i && i <= 2:
		i -= 1
		return _DomainMessageType_name_0[_DomainMessageType_index_0[i]:_DomainMessageType_index_0[i+1]]
	case i == 4:
		return _DomainMessageType_name_1
	default:
		return "DomainMessageType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[DomainDirtyrateUnstarted-0]
	_ = x[DomainDirtyrateMeasuring-1]
	_ = x[DomainDirtyrateMeasured-2]
}

const _DomainDirtyRateStatus_name = "DomainDirtyrateUnstartedDomainDirtyrateMeasuringDomainDirtyrateMeasured"

var _DomainDirtyRateStatus_index = [...]uint8{0, 24, 48, 71}

func (i DomainDirtyRateStatus) String() string {
	if i < 0 || i >= DomainDirtyRateStatus(len(_DomainDirtyRateStatus_index)-1) {
		return "DomainDirtyRateStatus(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _DomainDirtyRateStatus_name[_DomainDirtyRateStatus_index[i]:_DomainDirtyRateStatus_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[DomainDirtyrateModePageSampling-0]
	_ = x[DomainDirtyrateModeDirtyBitmap-1]
	_ = x[DomainDirtyrateModeDirtyRing-2]
}

const _DomainDirtyRateCalcFlags_name = "DomainDirtyrateModePageSamplingDomainDirtyrateModeDirtyBitmapDomainDirtyrateModeDirtyRing"

var _DomainDirtyRateCalcFlags_index = [...]uint8{0, 31, 61, 89}

func (i DomainDirtyRateCalcFlags) String() string {
	if i < 0 || i >= DomainDirtyRateCalcFlags(len(_DomainDirtyRateCalcFlags_index)-1) {
		return "DomainDirtyRateCalcFlags(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _DomainDirtyRateCalcFlags_name[_DomainDirtyRateCalcFlags_index[i]:_DomainDirtyRateCalcFlags_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[DomainFdAssociateSeclabelRestore-1]
	_ = x[DomainFdAssociateSeclabelWritable-2]
}

const _DomainFDAssociateFlags_name = "DomainFdAssociateSeclabelRestoreDomainFdAssociateSeclabelWritable"

var _DomainFDAssociateFlags_index = [...]uint8{0, 32, 65}

func (i DomainFDAssociateFlags) String() string {
	i -= 1
	if i < 0 || i >= DomainFDAssociateFlags(len(_DomainFDAssociateFlags_index)-1) {
		return "DomainFDAssociateFlags(" + strconv.FormatInt(int64(i+1), 10) + ")"
	}
	return _DomainFDAssociateFlags_name[_DomainFDAssociateFlags_index[i]:_DomainFDAssociateFlags_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[DomainGraphicsReloadTypeAny-0]
	_ = x[DomainGraphicsReloadTypeVnc-1]
}

const _DomainGraphicsReloadType_name = "DomainGraphicsReloadTypeAnyDomainGraphicsReloadTypeVnc"

var _DomainGraphicsReloadType_index = [...]uint8{0, 27, 54}

func (i DomainGraphicsReloadType) String() string {
	if i < 0 || i >= DomainGraphicsReloadType(len(_DomainGraphicsReloadType_index)-1) {
		return "DomainGraphicsReloadType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _DomainGraphicsReloadType_name[_DomainGraphicsReloadType_index[i]:_DomainGraphicsReloadType_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[EventHandleReadable-1]
	_ = x[EventHandleWritable-2]
	_ = x[EventHandleError-4]
	_ = x[EventHandleHangup-8]
}

const (
	_EventHandleType_name_0 = "EventHandleReadableEventHandleWritable"
	_EventHandleType_name_1 = "EventHandleError"
	_EventHandleType_name_2 = "EventHandleHangup"
)

var (
	_EventHandleType_index_0 = [...]uint8{0, 19, 38}
)

func (i EventHandleType) String() string {
	switch {
	case 1 <= i && i <= 2:
		i -= 1
		return _EventHandleType_name_0[_EventHandleType_index_0[i]:_EventHandleType_index_0[i+1]]
	case i == 4:
		return _EventHandleType_name_1
	case i == 8:
		return _EventHandleType_name_2
	default:
		return "EventHandleType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[NodeSuspendTargetMem-0]
	_ = x[NodeSuspendTargetDisk-1]
	_ = x[NodeSuspendTargetHybrid-2]
}

const _NodeSuspendTarget_name = "NodeSuspendTargetMemNodeSuspendTargetDiskNodeSuspendTargetHybrid"

var _NodeSuspendTarget_index = [...]uint8{0, 20, 41, 64}

func (i NodeSuspendTarget) String() string {
	if i < 0 || i >= NodeSuspendTarget(len(_NodeSuspendTarget_index)-1) {
		return "NodeSuspendTarget(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _NodeSuspendTarget_name[_NodeSuspendTarget_index[i]:_NodeSuspendTarget_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[NodeCPUStatsAllCpus - -1]
}

const _NodeGetCPUStatsAllCPUs_name = "NodeCPUStatsAllCpus"

var _NodeGetCPUStatsAllCPUs_index = [...]uint8{0, 19}

func (i NodeGetCPUStatsAllCPUs) String() string {
	i -= -1
	if i < 0 || i >= NodeGetCPUStatsAllCPUs(len(_NodeGetCPUStatsAllCPUs_index)-1) {
		return "NodeGetCPUStatsAllCPUs(" + strconv.FormatInt(int64(i+-1), 10) + ")"
	}
	return _NodeGetCPUStatsAllCPUs_name[_NodeGetCPUStatsAllCPUs_index[i]:_NodeGetCPUStatsAllCPUs_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[NodeMemoryStatsAllCells - -1]
}

const _NodeGetMemoryStatsAllCells_name = "NodeMemoryStatsAllCells"

var _NodeGetMemoryStatsAllCells_index = [...]uint8{0, 23}

func (i NodeGetMemoryStatsAllCells) String() string {
	i -= -1
	if i < 0 || i >= NodeGetMemoryStatsAllCells(len(_NodeGetMemoryStatsAllCells_index)-1) {
		return "NodeGetMemoryStatsAllCells(" + strconv.FormatInt(int64(i+-1), 10) + ")"
	}
	return _NodeGetMemoryStatsAllCells_name[_NodeGetMemoryStatsAllCells_index[i]:_NodeGetMemoryStatsAllCells_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[ConnectRo-1]
	_ = x[ConnectNoAliases-2]
}

const _ConnectFlags_name = "ConnectRoConnectNoAliases"

var _ConnectFlags_index = [...]uint8{0, 9, 25}

func (i ConnectFlags) String() string {
	i -= 1
	if i < 0 || i >= ConnectFlags(len(_ConnectFlags_index)-1) {
		return "ConnectFlags(" + strconv.FormatInt(int64(i+1), 10) + ")"
	}
	return _ConnectFlags_name[_ConnectFlags_index[i]:_ConnectFlags_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[CredUsername-1]
	_ = x[CredAuthname-2]
	_ = x[CredLanguage-3]
	_ = x[CredCnonce-4]
	_ = x[CredPassphrase-5]
	_ = x[CredEchoprompt-6]
	_ = x[CredNoechoprompt-7]
	_ = x[CredRealm-8]
	_ = x[CredExternal-9]
}

const _ConnectCredentialType_name = "CredUsernameCredAuthnameCredLanguageCredCnonceCredPassphraseCredEchopromptCredNoechopromptCredRealmCredExternal"

var _ConnectCredentialType_index = [...]uint8{0, 12, 24, 36, 46, 60, 74, 90, 99, 111}

func (i ConnectCredentialType) String() string {
	i -= 1
	if i < 0 || i >= ConnectCredentialType(len(_ConnectCredentialType_index)-1) {
		return "ConnectCredentialType(" + strconv.FormatInt(int64(i+1), 10) + ")"
	}
	return _ConnectCredentialType_name[_ConnectCredentialType_index[i]:_ConnectCredentialType_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[CPUCompareError - -1]
	_ = x[CPUCompareIncompatible-0]
	_ = x[CPUCompareIdentical-1]
	_ = x[CPUCompareSuperset-2]
}

const _CPUCompareResult_name = "CPUCompareErrorCPUCompareIncompatibleCPUCompareIdenticalCPUCompareSuperset"

var _CPUCompareResult_index = [...]uint8{0, 15, 37, 56, 74}

func (i CPUCompareResult) String() string {
	i -= -1
	if i < 0 || i >= CPUCompareResult(len(_CPUCompareResult_index)-1) {
		return "CPUCompareResult(" + strconv.FormatInt(int64(i+-1), 10) + ")"
	}
	return _CPUCompareResult_name[_CPUCompareResult_index[i]:_CPUCompareResult_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[ConnectCompareCPUFailIncompatible-1]
	_ = x[ConnectCompareCPUValidateXML-2]
}

const _ConnectCompareCPUFlags_name = "ConnectCompareCPUFailIncompatibleConnectCompareCPUValidateXML"

var _ConnectCompareCPUFlags_index = [...]uint8{0, 33, 61}

func (i ConnectCompareCPUFlags) String() string {
	i -= 1
	if i < 0 || i >= ConnectCompareCPUFlags(len(_ConnectCompareCPUFlags_index)-1) {
		return "ConnectCompareCPUFlags(" + strconv.FormatInt(int64(i+1), 10) + ")"
	}
	return _ConnectCompareCPUFlags_name[_ConnectCompareCPUFlags_index[i]:_ConnectCompareCPUFlags_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[ConnectBaselineCPUExpandFeatures-1]
	_ = x[ConnectBaselineCPUMigratable-2]
	_ = x[ConnectBaselineCPUIgnoreHost-4]
}

const (
	_ConnectBaselineCPUFlags_name_0 = "ConnectBaselineCPUExpandFeaturesConnectBaselineCPUMigratable"
	_ConnectBaselineCPUFlags_name_1 = "ConnectBaselineCPUIgnoreHost"
)

var (
	_ConnectBaselineCPUFlags_index_0 = [...]uint8{0, 32, 60}
)

func (i ConnectBaselineCPUFlags) String() string {
	switch {
	case 1 <= i && i <= 2:
		i -= 1
		return _ConnectBaselineCPUFlags_name_0[_ConnectBaselineCPUFlags_index_0[i]:_ConnectBaselineCPUFlags_index_0[i+1]]
	case i == 4:
		return _ConnectBaselineCPUFlags_name_1
	default:
		return "ConnectBaselineCPUFlags(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[NodeAllocPagesAdd-0]
	_ = x[NodeAllocPagesSet-1]
}

const _NodeAllocPagesFlags_name = "NodeAllocPagesAddNodeAllocPagesSet"

var _NodeAllocPagesFlags_index = [...]uint8{0, 17, 34}

func (i NodeAllocPagesFlags) String() string {
	if i < 0 || i >= NodeAllocPagesFlags(len(_NodeAllocPagesFlags_index)-1) {
		return "NodeAllocPagesFlags(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _NodeAllocPagesFlags_name[_NodeAllocPagesFlags_index[i]:_NodeAllocPagesFlags_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[ConnectListInterfacesInactive-1]
	_ = x[ConnectListInterfacesActive-2]
}

const _ConnectListAllInterfacesFlags_name = "ConnectListInterfacesInactiveConnectListInterfacesActive"

var _ConnectListAllInterfacesFlags_index = [...]uint8{0, 29, 56}

func (i ConnectListAllInterfacesFlags) String() string {
	i -= 1
	if i < 0 || i >= ConnectListAllInterfacesFlags(len(_ConnectListAllInterfacesFlags_index)-1) {
		return "ConnectListAllInterfacesFlags(" + strconv.FormatInt(int64(i+1), 10) + ")"
	}
	return _ConnectListAllInterfacesFlags_name[_ConnectListAllInterfacesFlags_index[i]:_ConnectListAllInterfacesFlags_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[InterfaceXMLInactive-1]
}

const _InterfaceXMLFlags_name = "InterfaceXMLInactive"

var _InterfaceXMLFlags_index = [...]uint8{0, 20}

func (i InterfaceXMLFlags) String() string {
	i -= 1
	if i < 0 || i >= InterfaceXMLFlags(len(_InterfaceXMLFlags_index)-1) {
		return "InterfaceXMLFlags(" + strconv.FormatInt(int64(i+1), 10) + ")"
	}
	return _InterfaceXMLFlags_name[_InterfaceXMLFlags_index[i]:_InterfaceXMLFlags_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[InterfaceDefineValidate-1]
}

const _InterfaceDefineFlags_name = "InterfaceDefineValidate"

var _InterfaceDefineFlags_index = [...]uint8{0, 23}

func (i InterfaceDefineFlags) String() string {
	i -= 1
	if i < 0 || i >= InterfaceDefineFlags(len(_InterfaceDefineFlags_index)-1) {
		return "InterfaceDefineFlags(" + strconv.FormatInt(int64(i+1), 10) + ")"
	}
	return _InterfaceDefineFlags_name[_InterfaceDefineFlags_index[i]:_InterfaceDefineFlags_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[NetworkXMLInactive-1]
}

const _NetworkXMLFlags_name = "NetworkXMLInactive"

var _NetworkXMLFlags_index = [...]uint8{0, 18}

func (i NetworkXMLFlags) String() string {
	i -= 1
	if i < 0 || i >= NetworkXMLFlags(len(_NetworkXMLFlags_index)-1) {
		return "NetworkXMLFlags(" + strconv.FormatInt(int64(i+1), 10) + ")"
	}
	return _NetworkXMLFlags_name[_NetworkXMLFlags_index[i]:_NetworkXMLFlags_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[ConnectListNetworksInactive-1]
	_ = x[ConnectListNetworksActive-2]
	_ = x[ConnectListNetworksPersistent-4]
	_ = x[ConnectListNetworksTransient-8]
	_ = x[ConnectListNetworksAutostart-16]
	_ = x[ConnectListNetworksNoAutostart-32]
}

const (
	_ConnectListAllNetworksFlags_name_0 = "ConnectListNetworksInactiveConnectListNetworksActive"
	_ConnectListAllNetworksFlags_name_1 = "ConnectListNetworksPersistent"
	_ConnectListAllNetworksFlags_name_2 = "ConnectListNetworksTransient"
	_ConnectListAllNetworksFlags_name_3 = "ConnectListNetworksAutostart"
	_ConnectListAllNetworksFlags_name_4 = "ConnectListNetworksNoAutostart"
)

var (
	_ConnectListAllNetworksFlags_index_0 = [...]uint8{0, 27, 52}
)

func (i ConnectListAllNetworksFlags) String() string {
	switch {
	case 1 <= i && i <= 2:
		i -= 1
		return _ConnectListAllNetworksFlags_name_0[_ConnectListAllNetworksFlags_index_0[i]:_ConnectListAllNetworksFlags_index_0[i+1]]
	case i == 4:
		return _ConnectListAllNetworksFlags_name_1
	case i == 8:
		return _ConnectListAllNetworksFlags_name_2
	case i == 16:
		return _ConnectListAllNetworksFlags_name_3
	case i == 32:
		return _ConnectListAllNetworksFlags_name_4
	default:
		return "ConnectListAllNetworksFlags(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[NetworkCreateValidate-1]
}

const _NetworkCreateFlags_name = "NetworkCreateValidate"

var _NetworkCreateFlags_index = [...]uint8{0, 21}

func (i NetworkCreateFlags) String() string {
	i -= 1
	if i < 0 || i >= NetworkCreateFlags(len(_NetworkCreateFlags_index)-1) {
		return "NetworkCreateFlags(" + strconv.FormatInt(int64(i+1), 10) + ")"
	}
	return _NetworkCreateFlags_name[_NetworkCreateFlags_index[i]:_NetworkCreateFlags_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[NetworkDefineValidate-1]
}

const _NetworkDefineFlags_name = "NetworkDefineValidate"

var _NetworkDefineFlags_index = [...]uint8{0, 21}

func (i NetworkDefineFlags) String() string {
	i -= 1
	if i < 0 || i >= NetworkDefineFlags(len(_NetworkDefineFlags_index)-1) {
		return "NetworkDefineFlags(" + strconv.FormatInt(int64(i+1), 10) + ")"
	}
	return _NetworkDefineFlags_name[_NetworkDefineFlags_index[i]:_NetworkDefineFlags_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[NetworkUpdateCommandNone-0]
	_ = x[NetworkUpdateCommandModify-1]
	_ = x[NetworkUpdateCommandDelete-2]
	_ = x[NetworkUpdateCommandAddLast-3]
	_ = x[NetworkUpdateCommandAddFirst-4]
}

const _NetworkUpdateCommand_name = "NetworkUpdateCommandNoneNetworkUpdateCommandModifyNetworkUpdateCommandDeleteNetworkUpdateCommandAddLastNetworkUpdateCommandAddFirst"

var _NetworkUpdateCommand_index = [...]uint8{0, 24, 50, 76, 103, 131}

func (i NetworkUpdateCommand) String() string {
	if i < 0 || i >= NetworkUpdateCommand(len(_NetworkUpdateCommand_index)-1) {
		return "NetworkUpdateCommand(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _NetworkUpdateCommand_name[_NetworkUpdateCommand_index[i]:_NetworkUpdateCommand_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[NetworkSectionNone-0]
	_ = x[NetworkSectionBridge-1]
	_ = x[NetworkSectionDomain-2]
	_ = x[NetworkSectionIP-3]
	_ = x[NetworkSectionIPDhcpHost-4]
	_ = x[NetworkSectionIPDhcpRange-5]
	_ = x[NetworkSectionForward-6]
	_ = x[NetworkSectionForwardInterface-7]
	_ = x[NetworkSectionForwardPf-8]
	_ = x[NetworkSectionPortgroup-9]
	_ = x[NetworkSectionDNSHost-10]
	_ = x[NetworkSectionDNSTxt-11]
	_ = x[NetworkSectionDNSSrv-12]
}

const _NetworkUpdateSection_name = "NetworkSectionNoneNetworkSectionBridgeNetworkSectionDomainNetworkSectionIPNetworkSectionIPDhcpHostNetworkSectionIPDhcpRangeNetworkSectionForwardNetworkSectionForwardInterfaceNetworkSectionForwardPfNetworkSectionPortgroupNetworkSectionDNSHostNetworkSectionDNSTxtNetworkSectionDNSSrv"

var _NetworkUpdateSection_index = [...]uint16{0, 18, 38, 58, 74, 98, 123, 144, 174, 197, 220, 241, 261, 281}

func (i NetworkUpdateSection) String() string {
	if i < 0 || i >= NetworkUpdateSection(len(_NetworkUpdateSection_index)-1) {
		return "NetworkUpdateSection(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _NetworkUpdateSection_name[_NetworkUpdateSection_index[i]:_NetworkUpdateSection_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[NetworkUpdateAffectCurrent-0]
	_ = x[NetworkUpdateAffectLive-1]
	_ = x[NetworkUpdateAffectConfig-2]
}

const _NetworkUpdateFlags_name = "NetworkUpdateAffectCurrentNetworkUpdateAffectLiveNetworkUpdateAffectConfig"

var _NetworkUpdateFlags_index = [...]uint8{0, 26, 49, 74}

func (i NetworkUpdateFlags) String() string {
	if i < 0 || i >= NetworkUpdateFlags(len(_NetworkUpdateFlags_index)-1) {
		return "NetworkUpdateFlags(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _NetworkUpdateFlags_name[_NetworkUpdateFlags_index[i]:_NetworkUpdateFlags_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[NetworkEventDefined-0]
	_ = x[NetworkEventUndefined-1]
	_ = x[NetworkEventStarted-2]
	_ = x[NetworkEventStopped-3]
}

const _NetworkEventLifecycleType_name = "NetworkEventDefinedNetworkEventUndefinedNetworkEventStartedNetworkEventStopped"

var _NetworkEventLifecycleType_index = [...]uint8{0, 19, 40, 59, 78}

func (i NetworkEventLifecycleType) String() string {
	if i < 0 || i >= NetworkEventLifecycleType(len(_NetworkEventLifecycleType_index)-1) {
		return "NetworkEventLifecycleType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _NetworkEventLifecycleType_name[_NetworkEventLifecycleType_index[i]:_NetworkEventLifecycleType_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[NetworkEventIDLifecycle-0]
	_ = x[NetworkEventIDMetadataChange-1]
}

const _NetworkEventID_name = "NetworkEventIDLifecycleNetworkEventIDMetadataChange"

var _NetworkEventID_index = [...]uint8{0, 23, 51}

func (i NetworkEventID) String() string {
	if i < 0 || i >= NetworkEventID(len(_NetworkEventID_index)-1) {
		return "NetworkEventID(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _NetworkEventID_name[_NetworkEventID_index[i]:_NetworkEventID_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[IPAddrTypeIpv4-0]
	_ = x[IPAddrTypeIpv6-1]
}

const _IPAddrType_name = "IPAddrTypeIpv4IPAddrTypeIpv6"

var _IPAddrType_index = [...]uint8{0, 14, 28}

func (i IPAddrType) String() string {
	if i < 0 || i >= IPAddrType(len(_IPAddrType_index)-1) {
		return "IPAddrType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _IPAddrType_name[_IPAddrType_index[i]:_IPAddrType_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[NetworkPortCreateReclaim-1]
	_ = x[NetworkPortCreateValidate-2]
}

const _NetworkPortCreateFlags_name = "NetworkPortCreateReclaimNetworkPortCreateValidate"

var _NetworkPortCreateFlags_index = [...]uint8{0, 24, 49}

func (i NetworkPortCreateFlags) String() string {
	i -= 1
	if i < 0 || i >= NetworkPortCreateFlags(len(_NetworkPortCreateFlags_index)-1) {
		return "NetworkPortCreateFlags(" + strconv.FormatInt(int64(i+1), 10) + ")"
	}
	return _NetworkPortCreateFlags_name[_NetworkPortCreateFlags_index[i]:_NetworkPortCreateFlags_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[NetworkMetadataDescription-0]
	_ = x[NetworkMetadataTitle-1]
	_ = x[NetworkMetadataElement-2]
}

const _NetworkMetadataType_name = "NetworkMetadataDescriptionNetworkMetadataTitleNetworkMetadataElement"

var _NetworkMetadataType_index = [...]uint8{0, 26, 46, 68}

func (i NetworkMetadataType) String() string {
	if i < 0 || i >= NetworkMetadataType(len(_NetworkMetadataType_index)-1) {
		return "NetworkMetadataType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _NetworkMetadataType_name[_NetworkMetadataType_index[i]:_NetworkMetadataType_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[ConnectListNodeDevicesCapSystem-1]
	_ = x[ConnectListNodeDevicesCapPciDev-2]
	_ = x[ConnectListNodeDevicesCapUsbDev-4]
	_ = x[ConnectListNodeDevicesCapUsbInterface-8]
	_ = x[ConnectListNodeDevicesCapNet-16]
	_ = x[ConnectListNodeDevicesCapScsiHost-32]
	_ = x[ConnectListNodeDevicesCapScsiTarget-64]
	_ = x[ConnectListNodeDevicesCapScsi-128]
	_ = x[ConnectListNodeDevicesCapStorage-256]
	_ = x[ConnectListNodeDevicesCapFcHost-512]
	_ = x[ConnectListNodeDevicesCapVports-1024]
	_ = x[ConnectListNodeDevicesCapScsiGeneric-2048]
	_ = x[ConnectListNodeDevicesCapDrm-4096]
	_ = x[ConnectListNodeDevicesCapMdevTypes-8192]
	_ = x[ConnectListNodeDevicesCapMdev-16384]
	_ = x[ConnectListNodeDevicesCapCcwDev-32768]
	_ = x[ConnectListNodeDevicesCapCssDev-65536]
	_ = x[ConnectListNodeDevicesCapVdpa-131072]
	_ = x[ConnectListNodeDevicesCapApCard-262144]
	_ = x[ConnectListNodeDevicesCapApQueue-524288]
	_ = x[ConnectListNodeDevicesCapApMatrix-1048576]
	_ = x[ConnectListNodeDevicesCapVpd-2097152]
	_ = x[ConnectListNodeDevicesCapCcwgroupDev-4194304]
	_ = x[ConnectListNodeDevicesCapCcwgroupMember-8388608]
	_ = x[ConnectListNodeDevicesPersistent-268435456]
	_ = x[ConnectListNodeDevicesTransient-536870912]
	_ = x[ConnectListNodeDevicesInactive-1073741824]
	_ = x[ConnectListNodeDevicesActive-2147483648]
}

const _ConnectListAllNodeDeviceFlags_name = "ConnectListNodeDevicesCapSystemConnectListNodeDevicesCapPciDevConnectListNodeDevicesCapUsbDevConnectListNodeDevicesCapUsbInterfaceConnectListNodeDevicesCapNetConnectListNodeDevicesCapScsiHostConnectListNodeDevicesCapScsiTargetConnectListNodeDevicesCapScsiConnectListNodeDevicesCapStorageConnectListNodeDevicesCapFcHostConnectListNodeDevicesCapVportsConnectListNodeDevicesCapScsiGenericConnectListNodeDevicesCapDrmConnectListNodeDevicesCapMdevTypesConnectListNodeDevicesCapMdevConnectListNodeDevicesCapCcwDevConnectListNodeDevicesCapCssDevConnectListNodeDevicesCapVdpaConnectListNodeDevicesCapApCardConnectListNodeDevicesCapApQueueConnectListNodeDevicesCapApMatrixConnectListNodeDevicesCapVpdConnectListNodeDevicesCapCcwgroupDevConnectListNodeDevicesCapCcwgroupMemberConnectListNodeDevicesPersistentConnectListNodeDevicesTransientConnectListNodeDevicesInactiveConnectListNodeDevicesActive"

var _ConnectListAllNodeDeviceFlags_map = map[ConnectListAllNodeDeviceFlags]string{
	1:          _ConnectListAllNodeDeviceFlags_name[0:31],
	2:          _ConnectListAllNodeDeviceFlags_name[31:62],
	4:          _ConnectListAllNodeDeviceFlags_name[62:93],
	8:          _ConnectListAllNodeDeviceFlags_name[93:130],
	16:         _ConnectListAllNodeDeviceFlags_name[130:158],
	32:         _ConnectListAllNodeDeviceFlags_name[158:191],
	64:         _ConnectListAllNodeDeviceFlags_name[191:226],
	128:        _ConnectListAllNodeDeviceFlags_name[226:255],
	256:        _ConnectListAllNodeDeviceFlags_name[255:287],
	512:        _ConnectListAllNodeDeviceFlags_name[287:318],
	1024:       _ConnectListAllNodeDeviceFlags_name[318:349],
	2048:       _ConnectListAllNodeDeviceFlags_name[349:385],
	4096:       _ConnectListAllNodeDeviceFlags_name[385:413],
	8192:       _ConnectListAllNodeDeviceFlags_name[413:447],
	16384:      _ConnectListAllNodeDeviceFlags_name[447:476],
	32768:      _ConnectListAllNodeDeviceFlags_name[476:507],
	65536:      _ConnectListAllNodeDeviceFlags_name[507:538],
	131072:     _ConnectListAllNodeDeviceFlags_name[538:567],
	262144:     _ConnectListAllNodeDeviceFlags_name[567:598],
	524288:     _ConnectListAllNodeDeviceFlags_name[598:630],
	1048576:    _ConnectListAllNodeDeviceFlags_name[630:663],
	2097152:    _ConnectListAllNodeDeviceFlags_name[663:691],
	4194304:    _ConnectListAllNodeDeviceFlags_name[691:727],
	8388608:    _ConnectListAllNodeDeviceFlags_name[727:766],
	268435456:  _ConnectListAllNodeDeviceFlags_name[766:798],
	536870912:  _ConnectListAllNodeDeviceFlags_name[798:829],
	1073741824: _ConnectListAllNodeDeviceFlags_name[829:859],
	2147483648: _ConnectListAllNodeDeviceFlags_name[859:887],
}

func (i ConnectListAllNodeDeviceFlags) String() string {
	if str, ok := _ConnectListAllNodeDeviceFlags_map[i]; ok {
		return str
	}
	return "ConnectListAllNodeDeviceFlags(" + strconv.FormatInt(int64(i), 10) + ")"
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[NodeDeviceXMLInactive-1]
}

const _NodeDeviceXMLFlags_name = "NodeDeviceXMLInactive"

var _NodeDeviceXMLFlags_index = [...]uint8{0, 21}

func (i NodeDeviceXMLFlags) String() string {
	i -= 1
	if i < 0 || i >= NodeDeviceXMLFlags(len(_NodeDeviceXMLFlags_index)-1) {
		return "NodeDeviceXMLFlags(" + strconv.FormatInt(int64(i+1), 10) + ")"
	}
	return _NodeDeviceXMLFlags_name[_NodeDeviceXMLFlags_index[i]:_NodeDeviceXMLFlags_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[NodeDeviceCreateXMLValidate-1]
}

const _NodeDeviceCreateXMLFlags_name = "NodeDeviceCreateXMLValidate"

var _NodeDeviceCreateXMLFlags_index = [...]uint8{0, 27}

func (i NodeDeviceCreateXMLFlags) String() string {
	i -= 1
	if i < 0 || i >= NodeDeviceCreateXMLFlags(len(_NodeDeviceCreateXMLFlags_index)-1) {
		return "NodeDeviceCreateXMLFlags(" + strconv.FormatInt(int64(i+1), 10) + ")"
	}
	return _NodeDeviceCreateXMLFlags_name[_NodeDeviceCreateXMLFlags_index[i]:_NodeDeviceCreateXMLFlags_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[NodeDeviceDefineXMLValidate-1]
}

const _NodeDeviceDefineXMLFlags_name = "NodeDeviceDefineXMLValidate"

var _NodeDeviceDefineXMLFlags_index = [...]uint8{0, 27}

func (i NodeDeviceDefineXMLFlags) String() string {
	i -= 1
	if i < 0 || i >= NodeDeviceDefineXMLFlags(len(_NodeDeviceDefineXMLFlags_index)-1) {
		return "NodeDeviceDefineXMLFlags(" + strconv.FormatInt(int64(i+1), 10) + ")"
	}
	return _NodeDeviceDefineXMLFlags_name[_NodeDeviceDefineXMLFlags_index[i]:_NodeDeviceDefineXMLFlags_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[NodeDeviceUpdateAffectCurrent-0]
	_ = x[NodeDeviceUpdateAffectLive-1]
	_ = x[NodeDeviceUpdateAffectConfig-2]
}

const _NodeDeviceUpdateFlags_name = "NodeDeviceUpdateAffectCurrentNodeDeviceUpdateAffectLiveNodeDeviceUpdateAffectConfig"

var _NodeDeviceUpdateFlags_index = [...]uint8{0, 29, 55, 83}

func (i NodeDeviceUpdateFlags) String() string {
	if i < 0 || i >= NodeDeviceUpdateFlags(len(_NodeDeviceUpdateFlags_index)-1) {
		return "NodeDeviceUpdateFlags(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _NodeDeviceUpdateFlags_name[_NodeDeviceUpdateFlags_index[i]:_NodeDeviceUpdateFlags_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[NodeDeviceEventIDLifecycle-0]
	_ = x[NodeDeviceEventIDUpdate-1]
}

const _NodeDeviceEventID_name = "NodeDeviceEventIDLifecycleNodeDeviceEventIDUpdate"

var _NodeDeviceEventID_index = [...]uint8{0, 26, 49}

func (i NodeDeviceEventID) String() string {
	if i < 0 || i >= NodeDeviceEventID(len(_NodeDeviceEventID_index)-1) {
		return "NodeDeviceEventID(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _NodeDeviceEventID_name[_NodeDeviceEventID_index[i]:_NodeDeviceEventID_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[NodeDeviceEventCreated-0]
	_ = x[NodeDeviceEventDeleted-1]
	_ = x[NodeDeviceEventDefined-2]
	_ = x[NodeDeviceEventUndefined-3]
}

const _NodeDeviceEventLifecycleType_name = "NodeDeviceEventCreatedNodeDeviceEventDeletedNodeDeviceEventDefinedNodeDeviceEventUndefined"

var _NodeDeviceEventLifecycleType_index = [...]uint8{0, 22, 44, 66, 90}

func (i NodeDeviceEventLifecycleType) String() string {
	if i < 0 || i >= NodeDeviceEventLifecycleType(len(_NodeDeviceEventLifecycleType_index)-1) {
		return "NodeDeviceEventLifecycleType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _NodeDeviceEventLifecycleType_name[_NodeDeviceEventLifecycleType_index[i]:_NodeDeviceEventLifecycleType_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[NwfilterDefineValidate-1]
}

const _NWFilterDefineFlags_name = "NwfilterDefineValidate"

var _NWFilterDefineFlags_index = [...]uint8{0, 22}

func (i NWFilterDefineFlags) String() string {
	i -= 1
	if i < 0 || i >= NWFilterDefineFlags(len(_NWFilterDefineFlags_index)-1) {
		return "NWFilterDefineFlags(" + strconv.FormatInt(int64(i+1), 10) + ")"
	}
	return _NWFilterDefineFlags_name[_NWFilterDefineFlags_index[i]:_NWFilterDefineFlags_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[NwfilterBindingCreateValidate-1]
}

const _NWFilterBindingCreateFlags_name = "NwfilterBindingCreateValidate"

var _NWFilterBindingCreateFlags_index = [...]uint8{0, 29}

func (i NWFilterBindingCreateFlags) String() string {
	i -= 1
	if i < 0 || i >= NWFilterBindingCreateFlags(len(_NWFilterBindingCreateFlags_index)-1) {
		return "NWFilterBindingCreateFlags(" + strconv.FormatInt(int64(i+1), 10) + ")"
	}
	return _NWFilterBindingCreateFlags_name[_NWFilterBindingCreateFlags_index[i]:_NWFilterBindingCreateFlags_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[SecretUsageTypeNone-0]
	_ = x[SecretUsageTypeVolume-1]
	_ = x[SecretUsageTypeCeph-2]
	_ = x[SecretUsageTypeIscsi-3]
	_ = x[SecretUsageTypeTLS-4]
	_ = x[SecretUsageTypeVtpm-5]
}

const _SecretUsageType_name = "SecretUsageTypeNoneSecretUsageTypeVolumeSecretUsageTypeCephSecretUsageTypeIscsiSecretUsageTypeTLSSecretUsageTypeVtpm"

var _SecretUsageType_index = [...]uint8{0, 19, 40, 59, 79, 97, 116}

func (i SecretUsageType) String() string {
	if i < 0 || i >= SecretUsageType(len(_SecretUsageType_index)-1) {
		return "SecretUsageType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _SecretUsageType_name[_SecretUsageType_index[i]:_SecretUsageType_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[ConnectListSecretsEphemeral-1]
	_ = x[ConnectListSecretsNoEphemeral-2]
	_ = x[ConnectListSecretsPrivate-4]
	_ = x[ConnectListSecretsNoPrivate-8]
}

const (
	_ConnectListAllSecretsFlags_name_0 = "ConnectListSecretsEphemeralConnectListSecretsNoEphemeral"
	_ConnectListAllSecretsFlags_name_1 = "ConnectListSecretsPrivate"
	_ConnectListAllSecretsFlags_name_2 = "ConnectListSecretsNoPrivate"
)

var (
	_ConnectListAllSecretsFlags_index_0 = [...]uint8{0, 27, 56}
)

func (i ConnectListAllSecretsFlags) String() string {
	switch {
	case 1 <= i && i <= 2:
		i -= 1
		return _ConnectListAllSecretsFlags_name_0[_ConnectListAllSecretsFlags_index_0[i]:_ConnectListAllSecretsFlags_index_0[i+1]]
	case i == 4:
		return _ConnectListAllSecretsFlags_name_1
	case i == 8:
		return _ConnectListAllSecretsFlags_name_2
	default:
		return "ConnectListAllSecretsFlags(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[SecretDefineValidate-1]
}

const _SecretDefineFlags_name = "SecretDefineValidate"

var _SecretDefineFlags_index = [...]uint8{0, 20}

func (i SecretDefineFlags) String() string {
	i -= 1
	if i < 0 || i >= SecretDefineFlags(len(_SecretDefineFlags_index)-1) {
		return "SecretDefineFlags(" + strconv.FormatInt(int64(i+1), 10) + ")"
	}
	return _SecretDefineFlags_name[_SecretDefineFlags_index[i]:_SecretDefineFlags_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[SecretEventIDLifecycle-0]
	_ = x[SecretEventIDValueChanged-1]
}

const _SecretEventID_name = "SecretEventIDLifecycleSecretEventIDValueChanged"

var _SecretEventID_index = [...]uint8{0, 22, 47}

func (i SecretEventID) String() string {
	if i < 0 || i >= SecretEventID(len(_SecretEventID_index)-1) {
		return "SecretEventID(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _SecretEventID_name[_SecretEventID_index[i]:_SecretEventID_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[SecretEventDefined-0]
	_ = x[SecretEventUndefined-1]
}

const _SecretEventLifecycleType_name = "SecretEventDefinedSecretEventUndefined"

var _SecretEventLifecycleType_index = [...]uint8{0, 18, 38}

func (i SecretEventLifecycleType) String() string {
	if i < 0 || i >= SecretEventLifecycleType(len(_SecretEventLifecycleType_index)-1) {
		return "SecretEventLifecycleType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _SecretEventLifecycleType_name[_SecretEventLifecycleType_index[i]:_SecretEventLifecycleType_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[StoragePoolInactive-0]
	_ = x[StoragePoolBuilding-1]
	_ = x[StoragePoolRunning-2]
	_ = x[StoragePoolDegraded-3]
	_ = x[StoragePoolInaccessible-4]
}

const _StoragePoolState_name = "StoragePoolInactiveStoragePoolBuildingStoragePoolRunningStoragePoolDegradedStoragePoolInaccessible"

var _StoragePoolState_index = [...]uint8{0, 19, 38, 56, 75, 98}

func (i StoragePoolState) String() string {
	if i < 0 || i >= StoragePoolState(len(_StoragePoolState_index)-1) {
		return "StoragePoolState(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _StoragePoolState_name[_StoragePoolState_index[i]:_StoragePoolState_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[StoragePoolBuildNew-0]
	_ = x[StoragePoolBuildRepair-1]
	_ = x[StoragePoolBuildResize-2]
	_ = x[StoragePoolBuildNoOverwrite-4]
	_ = x[StoragePoolBuildOverwrite-8]
}

const (
	_StoragePoolBuildFlags_name_0 = "StoragePoolBuildNewStoragePoolBuildRepairStoragePoolBuildResize"
	_StoragePoolBuildFlags_name_1 = "StoragePoolBuildNoOverwrite"
	_StoragePoolBuildFlags_name_2 = "StoragePoolBuildOverwrite"
)

var (
	_StoragePoolBuildFlags_index_0 = [...]uint8{0, 19, 41, 63}
)

func (i StoragePoolBuildFlags) String() string {
	switch {
	case 0 <= i && i <= 2:
		return _StoragePoolBuildFlags_name_0[_StoragePoolBuildFlags_index_0[i]:_StoragePoolBuildFlags_index_0[i+1]]
	case i == 4:
		return _StoragePoolBuildFlags_name_1
	case i == 8:
		return _StoragePoolBuildFlags_name_2
	default:
		return "StoragePoolBuildFlags(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[StoragePoolDeleteNormal-0]
	_ = x[StoragePoolDeleteZeroed-1]
}

const _StoragePoolDeleteFlags_name = "StoragePoolDeleteNormalStoragePoolDeleteZeroed"

var _StoragePoolDeleteFlags_index = [...]uint8{0, 23, 46}

func (i StoragePoolDeleteFlags) String() string {
	if i < 0 || i >= StoragePoolDeleteFlags(len(_StoragePoolDeleteFlags_index)-1) {
		return "StoragePoolDeleteFlags(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _StoragePoolDeleteFlags_name[_StoragePoolDeleteFlags_index[i]:_StoragePoolDeleteFlags_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[StoragePoolCreateNormal-0]
	_ = x[StoragePoolCreateWithBuild-1]
	_ = x[StoragePoolCreateWithBuildOverwrite-2]
	_ = x[StoragePoolCreateWithBuildNoOverwrite-4]
}

const (
	_StoragePoolCreateFlags_name_0 = "StoragePoolCreateNormalStoragePoolCreateWithBuildStoragePoolCreateWithBuildOverwrite"
	_StoragePoolCreateFlags_name_1 = "StoragePoolCreateWithBuildNoOverwrite"
)

var (
	_StoragePoolCreateFlags_index_0 = [...]uint8{0, 23, 49, 84}
)

func (i StoragePoolCreateFlags) String() string {
	switch {
	case 0 <= i && i <= 2:
		return _StoragePoolCreateFlags_name_0[_StoragePoolCreateFlags_index_0[i]:_StoragePoolCreateFlags_index_0[i+1]]
	case i == 4:
		return _StoragePoolCreateFlags_name_1
	default:
		return "StoragePoolCreateFlags(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[StorageVolFile-0]
	_ = x[StorageVolBlock-1]
	_ = x[StorageVolDir-2]
	_ = x[StorageVolNetwork-3]
	_ = x[StorageVolNetdir-4]
	_ = x[StorageVolPloop-5]
}

const _StorageVolType_name = "StorageVolFileStorageVolBlockStorageVolDirStorageVolNetworkStorageVolNetdirStorageVolPloop"

var _StorageVolType_index = [...]uint8{0, 14, 29, 42, 59, 75, 90}

func (i StorageVolType) String() string {
	if i < 0 || i >= StorageVolType(len(_StorageVolType_index)-1) {
		return "StorageVolType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _StorageVolType_name[_StorageVolType_index[i]:_StorageVolType_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[StorageVolDeleteNormal-0]
	_ = x[StorageVolDeleteZeroed-1]
	_ = x[StorageVolDeleteWithSnapshots-2]
}

const _StorageVolDeleteFlags_name = "StorageVolDeleteNormalStorageVolDeleteZeroedStorageVolDeleteWithSnapshots"

var _StorageVolDeleteFlags_index = [...]uint8{0, 22, 44, 73}

func (i StorageVolDeleteFlags) String() string {
	if i < 0 || i >= StorageVolDeleteFlags(len(_StorageVolDeleteFlags_index)-1) {
		return "StorageVolDeleteFlags(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _StorageVolDeleteFlags_name[_StorageVolDeleteFlags_index[i]:_StorageVolDeleteFlags_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[StorageVolWipeAlgZero-0]
	_ = x[StorageVolWipeAlgNnsa-1]
	_ = x[StorageVolWipeAlgDod-2]
	_ = x[StorageVolWipeAlgBsi-3]
	_ = x[StorageVolWipeAlgGutmann-4]
	_ = x[StorageVolWipeAlgSchneier-5]
	_ = x[StorageVolWipeAlgPfitzner7-6]
	_ = x[StorageVolWipeAlgPfitzner33-7]
	_ = x[StorageVolWipeAlgRandom-8]
	_ = x[StorageVolWipeAlgTrim-9]
}

const _StorageVolWipeAlgorithm_name = "StorageVolWipeAlgZeroStorageVolWipeAlgNnsaStorageVolWipeAlgDodStorageVolWipeAlgBsiStorageVolWipeAlgGutmannStorageVolWipeAlgSchneierStorageVolWipeAlgPfitzner7StorageVolWipeAlgPfitzner33StorageVolWipeAlgRandomStorageVolWipeAlgTrim"

var _StorageVolWipeAlgorithm_index = [...]uint8{0, 21, 42, 62, 82, 106, 131, 157, 184, 207, 228}

func (i StorageVolWipeAlgorithm) String() string {
	if i < 0 || i >= StorageVolWipeAlgorithm(len(_StorageVolWipeAlgorithm_index)-1) {
		return "StorageVolWipeAlgorithm(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _StorageVolWipeAlgorithm_name[_StorageVolWipeAlgorithm_index[i]:_StorageVolWipeAlgorithm_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[StorageVolUseAllocation-0]
	_ = x[StorageVolGetPhysical-1]
}

const _StorageVolInfoFlags_name = "StorageVolUseAllocationStorageVolGetPhysical"

var _StorageVolInfoFlags_index = [...]uint8{0, 23, 44}

func (i StorageVolInfoFlags) String() string {
	if i < 0 || i >= StorageVolInfoFlags(len(_StorageVolInfoFlags_index)-1) {
		return "StorageVolInfoFlags(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _StorageVolInfoFlags_name[_StorageVolInfoFlags_index[i]:_StorageVolInfoFlags_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[StorageXMLInactive-1]
}

const _StorageXMLFlags_name = "StorageXMLInactive"

var _StorageXMLFlags_index = [...]uint8{0, 18}

func (i StorageXMLFlags) String() string {
	i -= 1
	if i < 0 || i >= StorageXMLFlags(len(_StorageXMLFlags_index)-1) {
		return "StorageXMLFlags(" + strconv.FormatInt(int64(i+1), 10) + ")"
	}
	return _StorageXMLFlags_name[_StorageXMLFlags_index[i]:_StorageXMLFlags_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[ConnectListStoragePoolsInactive-1]
	_ = x[ConnectListStoragePoolsActive-2]
	_ = x[ConnectListStoragePoolsPersistent-4]
	_ = x[ConnectListStoragePoolsTransient-8]
	_ = x[ConnectListStoragePoolsAutostart-16]
	_ = x[ConnectListStoragePoolsNoAutostart-32]
	_ = x[ConnectListStoragePoolsDir-64]
	_ = x[ConnectListStoragePoolsFs-128]
	_ = x[ConnectListStoragePoolsNetfs-256]
	_ = x[ConnectListStoragePoolsLogical-512]
	_ = x[ConnectListStoragePoolsDisk-1024]
	_ = x[ConnectListStoragePoolsIscsi-2048]
	_ = x[ConnectListStoragePoolsScsi-4096]
	_ = x[ConnectListStoragePoolsMpath-8192]
	_ = x[ConnectListStoragePoolsRbd-16384]
	_ = x[ConnectListStoragePoolsSheepdog-32768]
	_ = x[ConnectListStoragePoolsGluster-65536]
	_ = x[ConnectListStoragePoolsZfs-131072]
	_ = x[ConnectListStoragePoolsVstorage-262144]
	_ = x[ConnectListStoragePoolsIscsiDirect-524288]
}

const _ConnectListAllStoragePoolsFlags_name = "ConnectListStoragePoolsInactiveConnectListStoragePoolsActiveConnectListStoragePoolsPersistentConnectListStoragePoolsTransientConnectListStoragePoolsAutostartConnectListStoragePoolsNoAutostartConnectListStoragePoolsDirConnectListStoragePoolsFsConnectListStoragePoolsNetfsConnectListStoragePoolsLogicalConnectListStoragePoolsDiskConnectListStoragePoolsIscsiConnectListStoragePoolsScsiConnectListStoragePoolsMpathConnectListStoragePoolsRbdConnectListStoragePoolsSheepdogConnectListStoragePoolsGlusterConnectListStoragePoolsZfsConnectListStoragePoolsVstorageConnectListStoragePoolsIscsiDirect"

var _ConnectListAllStoragePoolsFlags_map = map[ConnectListAllStoragePoolsFlags]string{
	1:      _ConnectListAllStoragePoolsFlags_name[0:31],
	2:      _ConnectListAllStoragePoolsFlags_name[31:60],
	4:      _ConnectListAllStoragePoolsFlags_name[60:93],
	8:      _ConnectListAllStoragePoolsFlags_name[93:125],
	16:     _ConnectListAllStoragePoolsFlags_name[125:157],
	32:     _ConnectListAllStoragePoolsFlags_name[157:191],
	64:     _ConnectListAllStoragePoolsFlags_name[191:217],
	128:    _ConnectListAllStoragePoolsFlags_name[217:242],
	256:    _ConnectListAllStoragePoolsFlags_name[242:270],
	512:    _ConnectListAllStoragePoolsFlags_name[270:300],
	1024:   _ConnectListAllStoragePoolsFlags_name[300:327],
	2048:   _ConnectListAllStoragePoolsFlags_name[327:355],
	4096:   _ConnectListAllStoragePoolsFlags_name[355:382],
	8192:   _ConnectListAllStoragePoolsFlags_name[382:410],
	16384:  _ConnectListAllStoragePoolsFlags_name[410:436],
	32768:  _ConnectListAllStoragePoolsFlags_name[436:467],
	65536:  _ConnectListAllStoragePoolsFlags_name[467:497],
	131072: _ConnectListAllStoragePoolsFlags_name[497:523],
	262144: _ConnectListAllStoragePoolsFlags_name[523:554],
	524288: _ConnectListAllStoragePoolsFlags_name[554:588],
}

func (i ConnectListAllStoragePoolsFlags) String() string {
	if str, ok := _ConnectListAllStoragePoolsFlags_map[i]; ok {
		return str
	}
	return "ConnectListAllStoragePoolsFlags(" + strconv.FormatInt(int64(i), 10) + ")"
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[StoragePoolDefineValidate-1]
}

const _StoragePoolDefineFlags_name = "StoragePoolDefineValidate"

var _StoragePoolDefineFlags_index = [...]uint8{0, 25}

func (i StoragePoolDefineFlags) String() string {
	i -= 1
	if i < 0 || i >= StoragePoolDefineFlags(len(_StoragePoolDefineFlags_index)-1) {
		return "StoragePoolDefineFlags(" + strconv.FormatInt(int64(i+1), 10) + ")"
	}
	return _StoragePoolDefineFlags_name[_StoragePoolDefineFlags_index[i]:_StoragePoolDefineFlags_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[StorageVolCreatePreallocMetadata-1]
	_ = x[StorageVolCreateReflink-2]
	_ = x[StorageVolCreateValidate-4]
}

const (
	_StorageVolCreateFlags_name_0 = "StorageVolCreatePreallocMetadataStorageVolCreateReflink"
	_StorageVolCreateFlags_name_1 = "StorageVolCreateValidate"
)

var (
	_StorageVolCreateFlags_index_0 = [...]uint8{0, 32, 55}
)

func (i StorageVolCreateFlags) String() string {
	switch {
	case 1 <= i && i <= 2:
		i -= 1
		return _StorageVolCreateFlags_name_0[_StorageVolCreateFlags_index_0[i]:_StorageVolCreateFlags_index_0[i+1]]
	case i == 4:
		return _StorageVolCreateFlags_name_1
	default:
		return "StorageVolCreateFlags(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[StorageVolDownloadSparseStream-1]
}

const _StorageVolDownloadFlags_name = "StorageVolDownloadSparseStream"

var _StorageVolDownloadFlags_index = [...]uint8{0, 30}

func (i StorageVolDownloadFlags) String() string {
	i -= 1
	if i < 0 || i >= StorageVolDownloadFlags(len(_StorageVolDownloadFlags_index)-1) {
		return "StorageVolDownloadFlags(" + strconv.FormatInt(int64(i+1), 10) + ")"
	}
	return _StorageVolDownloadFlags_name[_StorageVolDownloadFlags_index[i]:_StorageVolDownloadFlags_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[StorageVolUploadSparseStream-1]
}

const _StorageVolUploadFlags_name = "StorageVolUploadSparseStream"

var _StorageVolUploadFlags_index = [...]uint8{0, 28}

func (i StorageVolUploadFlags) String() string {
	i -= 1
	if i < 0 || i >= StorageVolUploadFlags(len(_StorageVolUploadFlags_index)-1) {
		return "StorageVolUploadFlags(" + strconv.FormatInt(int64(i+1), 10) + ")"
	}
	return _StorageVolUploadFlags_name[_StorageVolUploadFlags_index[i]:_StorageVolUploadFlags_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[StorageVolResizeAllocate-1]
	_ = x[StorageVolResizeDelta-2]
	_ = x[StorageVolResizeShrink-4]
}

const (
	_StorageVolResizeFlags_name_0 = "StorageVolResizeAllocateStorageVolResizeDelta"
	_StorageVolResizeFlags_name_1 = "StorageVolResizeShrink"
)

var (
	_StorageVolResizeFlags_index_0 = [...]uint8{0, 24, 45}
)

func (i StorageVolResizeFlags) String() string {
	switch {
	case 1 <= i && i <= 2:
		i -= 1
		return _StorageVolResizeFlags_name_0[_StorageVolResizeFlags_index_0[i]:_StorageVolResizeFlags_index_0[i+1]]
	case i == 4:
		return _StorageVolResizeFlags_name_1
	default:
		return "StorageVolResizeFlags(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[StoragePoolEventIDLifecycle-0]
	_ = x[StoragePoolEventIDRefresh-1]
}

const _StoragePoolEventID_name = "StoragePoolEventIDLifecycleStoragePoolEventIDRefresh"

var _StoragePoolEventID_index = [...]uint8{0, 27, 52}

func (i StoragePoolEventID) String() string {
	if i < 0 || i >= StoragePoolEventID(len(_StoragePoolEventID_index)-1) {
		return "StoragePoolEventID(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _StoragePoolEventID_name[_StoragePoolEventID_index[i]:_StoragePoolEventID_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[StoragePoolEventDefined-0]
	_ = x[StoragePoolEventUndefined-1]
	_ = x[StoragePoolEventStarted-2]
	_ = x[StoragePoolEventStopped-3]
	_ = x[StoragePoolEventCreated-4]
	_ = x[StoragePoolEventDeleted-5]
}

const _StoragePoolEventLifecycleType_name = "StoragePoolEventDefinedStoragePoolEventUndefinedStoragePoolEventStartedStoragePoolEventStoppedStoragePoolEventCreatedStoragePoolEventDeleted"

var _StoragePoolEventLifecycleType_index = [...]uint8{0, 23, 48, 71, 94, 117, 140}

func (i StoragePoolEventLifecycleType) String() string {
	if i < 0 || i >= StoragePoolEventLifecycleType(len(_StoragePoolEventLifecycleType_index)-1) {
		return "StoragePoolEventLifecycleType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _StoragePoolEventLifecycleType_name[_StoragePoolEventLifecycleType_index[i]:_StoragePoolEventLifecycleType_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[StreamNonblock-1]
}

const _StreamFlags_name = "StreamNonblock"

var _StreamFlags_index = [...]uint8{0, 14}

func (i StreamFlags) String() string {
	i -= 1
	if i < 0 || i >= StreamFlags(len(_StreamFlags_index)-1) {
		return "StreamFlags(" + strconv.FormatInt(int64(i+1), 10) + ")"
	}
	return _StreamFlags_name[_StreamFlags_index[i]:_StreamFlags_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[StreamRecvStopAtHole-1]
}

const _StreamRecvFlagsValues_name = "StreamRecvStopAtHole"

var _StreamRecvFlagsValues_index = [...]uint8{0, 20}

func (i StreamRecvFlagsValues) String() string {
	i -= 1
	if i < 0 || i >= StreamRecvFlagsValues(len(_StreamRecvFlagsValues_index)-1) {
		return "StreamRecvFlagsValues(" + strconv.FormatInt(int64(i+1), 10) + ")"
	}
	return _StreamRecvFlagsValues_name[_StreamRecvFlagsValues_index[i]:_StreamRecvFlagsValues_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[StreamEventReadable-1]
	_ = x[StreamEventWritable-2]
	_ = x[StreamEventError-4]
	_ = x[StreamEventHangup-8]
}

const (
	_StreamEventType_name_0 = "StreamEventReadableStreamEventWritable"
	_StreamEventType_name_1 = "StreamEventError"
	_StreamEventType_name_2 = "StreamEventHangup"
)

var (
	_StreamEventType_index_0 = [...]uint8{0, 19, 38}
)

func (i StreamEventType) String() string {
	switch {
	case 1 <= i && i <= 2:
		i -= 1
		return _StreamEventType_name_0[_StreamEventType_index_0[i]:_StreamEventType_index_0[i+1]]
	case i == 4:
		return _StreamEventType_name_1
	case i == 8:
		return _StreamEventType_name_2
	default:
		return "StreamEventType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[ErrNone-0]
	_ = x[ErrWarning-1]
	_ = x[ErrError-2]
}

const _ErrorLevel_name = "ErrNoneErrWarningErrError"

var _ErrorLevel_index = [...]uint8{0, 7, 17, 25}

func (i ErrorLevel) String() string {
	if i < 0 || i >= ErrorLevel(len(_ErrorLevel_index)-1) {
		return "ErrorLevel(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _ErrorLevel_name[_ErrorLevel_index[i]:_ErrorLevel_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[fromNone-0]
	_ = x[fromXen-1]
	_ = x[fromXend-2]
	_ = x[fromXenstore-3]
	_ = x[fromSexpr-4]
	_ = x[fromXML-5]
	_ = x[fromDom-6]
	_ = x[fromRPC-7]
	_ = x[fromProxy-8]
	_ = x[fromConf-9]
	_ = x[fromQemu-10]
	_ = x[fromNet-11]
	_ = x[fromTest-12]
	_ = x[fromRemote-13]
	_ = x[fromOpenvz-14]
	_ = x[fromXenxm-15]
	_ = x[fromStatsLinux-16]
	_ = x[fromLxc-17]
	_ = x[fromStorage-18]
	_ = x[fromNetwork-19]
	_ = x[fromDomain-20]
	_ = x[fromUml-21]
	_ = x[fromNodedev-22]
	_ = x[fromXenInotify-23]
	_ = x[fromSecurity-24]
	_ = x[fromVbox-25]
	_ = x[fromInterface-26]
	_ = x[fromOne-27]
	_ = x[fromEsx-28]
	_ = x[fromPhyp-29]
	_ = x[fromSecret-30]
	_ = x[fromCPU-31]
	_ = x[fromXenapi-32]
	_ = x[fromNwfilter-33]
	_ = x[fromHook-34]
	_ = x[fromDomainSnapshot-35]
	_ = x[fromAudit-36]
	_ = x[fromSysinfo-37]
	_ = x[fromStreams-38]
	_ = x[fromVmware-39]
	_ = x[fromEvent-40]
	_ = x[fromLibxl-41]
	_ = x[fromLocking-42]
	_ = x[fromHyperv-43]
	_ = x[fromCapabilities-44]
	_ = x[fromURI-45]
	_ = x[fromAuth-46]
	_ = x[fromDbus-47]
	_ = x[fromParallels-48]
	_ = x[fromDevice-49]
	_ = x[fromSSH-50]
	_ = x[fromLockspace-51]
	_ = x[fromInitctl-52]
	_ = x[fromIdentity-53]
	_ = x[fromCgroup-54]
	_ = x[fromAccess-55]
	_ = x[fromSystemd-56]
	_ = x[fromBhyve-57]
	_ = x[fromCrypto-58]
	_ = x[fromFirewall-59]
	_ = x[fromPolkit-60]
	_ = x[fromThread-61]
	_ = x[fromAdmin-62]
	_ = x[fromLogging-63]
	_ = x[fromXenxl-64]
	_ = x[fromPerf-65]
	_ = x[fromLibssh-66]
	_ = x[fromResctrl-67]
	_ = x[fromFirewalld-68]
	_ = x[fromDomainCheckpoint-69]
	_ = x[fromTpm-70]
	_ = x[fromBpf-71]
	_ = x[fromCh-72]
}

const _ErrorDomain_name = "fromNonefromXenfromXendfromXenstorefromSexprfromXMLfromDomfromRPCfromProxyfromConffromQemufromNetfromTestfromRemotefromOpenvzfromXenxmfromStatsLinuxfromLxcfromStoragefromNetworkfromDomainfromUmlfromNodedevfromXenInotifyfromSecurityfromVboxfromInterfacefromOnefromEsxfromPhypfromSecretfromCPUfromXenapifromNwfilterfromHookfromDomainSnapshotfromAuditfromSysinfofromStreamsfromVmwarefromEventfromLibxlfromLockingfromHypervfromCapabilitiesfromURIfromAuthfromDbusfromParallelsfromDevicefromSSHfromLockspacefromInitctlfromIdentityfromCgroupfromAccessfromSystemdfromBhyvefromCryptofromFirewallfromPolkitfromThreadfromAdminfromLoggingfromXenxlfromPerffromLibsshfromResctrlfromFirewalldfromDomainCheckpointfromTpmfromBpffromCh"

var _ErrorDomain_index = [...]uint16{0, 8, 15, 23, 35, 44, 51, 58, 65, 74, 82, 90, 97, 105, 115, 125, 134, 148, 155, 166, 177, 187, 194, 205, 219, 231, 239, 252, 259, 266, 274, 284, 291, 301, 313, 321, 339, 348, 359, 370, 380, 389, 398, 409, 419, 435, 442, 450, 458, 471, 481, 488, 501, 512, 524, 534, 544, 555, 564, 574, 586, 596, 606, 615, 626, 635, 643, 653, 664, 677, 697, 704, 711, 717}

func (i ErrorDomain) String() string {
	if i < 0 || i >= ErrorDomain(len(_ErrorDomain_index)-1) {
		return "ErrorDomain(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _ErrorDomain_name[_ErrorDomain_index[i]:_ErrorDomain_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[ErrOk-0]
	_ = x[ErrInternalError-1]
	_ = x[ErrNoMemory-2]
	_ = x[ErrNoSupport-3]
	_ = x[ErrUnknownHost-4]
	_ = x[ErrNoConnect-5]
	_ = x[ErrInvalidConn-6]
	_ = x[ErrInvalidDomain-7]
	_ = x[ErrInvalidArg-8]
	_ = x[ErrOperationFailed-9]
	_ = x[ErrGetFailed-10]
	_ = x[ErrPostFailed-11]
	_ = x[ErrHTTPError-12]
	_ = x[ErrSexprSerial-13]
	_ = x[ErrNoXen-14]
	_ = x[ErrXenCall-15]
	_ = x[ErrOsType-16]
	_ = x[ErrNoKernel-17]
	_ = x[ErrNoRoot-18]
	_ = x[ErrNoSource-19]
	_ = x[ErrNoTarget-20]
	_ = x[ErrNoName-21]
	_ = x[ErrNoOs-22]
	_ = x[ErrNoDevice-23]
	_ = x[ErrNoXenstore-24]
	_ = x[ErrDriverFull-25]
	_ = x[ErrCallFailed-26]
	_ = x[ErrXMLError-27]
	_ = x[ErrDomExist-28]
	_ = x[ErrOperationDenied-29]
	_ = x[ErrOpenFailed-30]
	_ = x[ErrReadFailed-31]
	_ = x[ErrParseFailed-32]
	_ = x[ErrConfSyntax-33]
	_ = x[ErrWriteFailed-34]
	_ = x[ErrXMLDetail-35]
	_ = x[ErrInvalidNetwork-36]
	_ = x[ErrNetworkExist-37]
	_ = x[ErrSystemError-38]
	_ = x[ErrRPC-39]
	_ = x[ErrGnutlsError-40]
	_ = x[WarNoNetwork-41]
	_ = x[ErrNoDomain-42]
	_ = x[ErrNoNetwork-43]
	_ = x[ErrInvalidMac-44]
	_ = x[ErrAuthFailed-45]
	_ = x[ErrInvalidStoragePool-46]
	_ = x[ErrInvalidStorageVol-47]
	_ = x[WarNoStorage-48]
	_ = x[ErrNoStoragePool-49]
	_ = x[ErrNoStorageVol-50]
	_ = x[WarNoNode-51]
	_ = x[ErrInvalidNodeDevice-52]
	_ = x[ErrNoNodeDevice-53]
	_ = x[ErrNoSecurityModel-54]
	_ = x[ErrOperationInvalid-55]
	_ = x[WarNoInterface-56]
	_ = x[ErrNoInterface-57]
	_ = x[ErrInvalidInterface-58]
	_ = x[ErrMultipleInterfaces-59]
	_ = x[WarNoNwfilter-60]
	_ = x[ErrInvalidNwfilter-61]
	_ = x[ErrNoNwfilter-62]
	_ = x[ErrBuildFirewall-63]
	_ = x[WarNoSecret-64]
	_ = x[ErrInvalidSecret-65]
	_ = x[ErrNoSecret-66]
	_ = x[ErrConfigUnsupported-67]
	_ = x[ErrOperationTimeout-68]
	_ = x[ErrMigratePersistFailed-69]
	_ = x[ErrHookScriptFailed-70]
	_ = x[ErrInvalidDomainSnapshot-71]
	_ = x[ErrNoDomainSnapshot-72]
	_ = x[ErrInvalidStream-73]
	_ = x[ErrArgumentUnsupported-74]
	_ = x[ErrStorageProbeFailed-75]
	_ = x[ErrStoragePoolBuilt-76]
	_ = x[ErrSnapshotRevertRisky-77]
	_ = x[ErrOperationAborted-78]
	_ = x[ErrAuthCancelled-79]
	_ = x[ErrNoDomainMetadata-80]
	_ = x[ErrMigrateUnsafe-81]
	_ = x[ErrOverflow-82]
	_ = x[ErrBlockCopyActive-83]
	_ = x[ErrOperationUnsupported-84]
	_ = x[ErrSSH-85]
	_ = x[ErrAgentUnresponsive-86]
	_ = x[ErrResourceBusy-87]
	_ = x[ErrAccessDenied-88]
	_ = x[ErrDbusService-89]
	_ = x[ErrStorageVolExist-90]
	_ = x[ErrCPUIncompatible-91]
	_ = x[ErrXMLInvalidSchema-92]
	_ = x[ErrMigrateFinishOk-93]
	_ = x[ErrAuthUnavailable-94]
	_ = x[ErrNoServer-95]
	_ = x[ErrNoClient-96]
	_ = x[ErrAgentUnsynced-97]
	_ = x[ErrLibssh-98]
	_ = x[ErrDeviceMissing-99]
	_ = x[ErrInvalidNwfilterBinding-100]
	_ = x[ErrNoNwfilterBinding-101]
	_ = x[ErrInvalidDomainCheckpoint-102]
	_ = x[ErrNoDomainCheckpoint-103]
	_ = x[ErrNoDomainBackup-104]
	_ = x[ErrInvalidNetworkPort-105]
	_ = x[ErrNetworkPortExist-106]
	_ = x[ErrNoNetworkPort-107]
	_ = x[ErrNoHostname-108]
	_ = x[ErrCheckpointInconsistent-109]
	_ = x[ErrMultipleDomains-110]
	_ = x[ErrNoNetworkMetadata-111]
	_ = x[ErrAgentCommandTimeout-112]
	_ = x[ErrAgentCommandFailed-113]
}

const _ErrorNumber_name = "ErrOkErrInternalErrorErrNoMemoryErrNoSupportErrUnknownHostErrNoConnectErrInvalidConnErrInvalidDomainErrInvalidArgErrOperationFailedErrGetFailedErrPostFailedErrHTTPErrorErrSexprSerialErrNoXenErrXenCallErrOsTypeErrNoKernelErrNoRootErrNoSourceErrNoTargetErrNoNameErrNoOsErrNoDeviceErrNoXenstoreErrDriverFullErrCallFailedErrXMLErrorErrDomExistErrOperationDeniedErrOpenFailedErrReadFailedErrParseFailedErrConfSyntaxErrWriteFailedErrXMLDetailErrInvalidNetworkErrNetworkExistErrSystemErrorErrRPCErrGnutlsErrorWarNoNetworkErrNoDomainErrNoNetworkErrInvalidMacErrAuthFailedErrInvalidStoragePoolErrInvalidStorageVolWarNoStorageErrNoStoragePoolErrNoStorageVolWarNoNodeErrInvalidNodeDeviceErrNoNodeDeviceErrNoSecurityModelErrOperationInvalidWarNoInterfaceErrNoInterfaceErrInvalidInterfaceErrMultipleInterfacesWarNoNwfilterErrInvalidNwfilterErrNoNwfilterErrBuildFirewallWarNoSecretErrInvalidSecretErrNoSecretErrConfigUnsupportedErrOperationTimeoutErrMigratePersistFailedErrHookScriptFailedErrInvalidDomainSnapshotErrNoDomainSnapshotErrInvalidStreamErrArgumentUnsupportedErrStorageProbeFailedErrStoragePoolBuiltErrSnapshotRevertRiskyErrOperationAbortedErrAuthCancelledErrNoDomainMetadataErrMigrateUnsafeErrOverflowErrBlockCopyActiveErrOperationUnsupportedErrSSHErrAgentUnresponsiveErrResourceBusyErrAccessDeniedErrDbusServiceErrStorageVolExistErrCPUIncompatibleErrXMLInvalidSchemaErrMigrateFinishOkErrAuthUnavailableErrNoServerErrNoClientErrAgentUnsyncedErrLibsshErrDeviceMissingErrInvalidNwfilterBindingErrNoNwfilterBindingErrInvalidDomainCheckpointErrNoDomainCheckpointErrNoDomainBackupErrInvalidNetworkPortErrNetworkPortExistErrNoNetworkPortErrNoHostnameErrCheckpointInconsistentErrMultipleDomainsErrNoNetworkMetadataErrAgentCommandTimeoutErrAgentCommandFailed"

var _ErrorNumber_index = [...]uint16{0, 5, 21, 32, 44, 58, 70, 84, 100, 113, 131, 143, 156, 168, 182, 190, 200, 209, 220, 229, 240, 251, 260, 267, 278, 291, 304, 317, 328, 339, 357, 370, 383, 397, 410, 424, 436, 453, 468, 482, 488, 502, 514, 525, 537, 550, 563, 584, 604, 616, 632, 647, 656, 676, 691, 709, 728, 742, 756, 775, 796, 809, 827, 840, 856, 867, 883, 894, 914, 933, 956, 975, 999, 1018, 1034, 1056, 1077, 1096, 1118, 1137, 1153, 1172, 1188, 1199, 1217, 1240, 1246, 1266, 1281, 1296, 1310, 1328, 1346, 1365, 1383, 1401, 1412, 1423, 1439, 1448, 1464, 1489, 1509, 1535, 1556, 1573, 1594, 1613, 1629, 1642, 1667, 1685, 1705, 1727, 1748}

func (i ErrorNumber) String() string {
	if i < 0 || i >= ErrorNumber(len(_ErrorNumber_index)-1) {
		return "ErrorNumber(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _ErrorNumber_name[_ErrorNumber_index[i]:_ErrorNumber_index[i+1]]
}
